openapi: '3.0.2'
info:
    title: BitBadges API
    version: '0.1'
servers:
    - url: https://api.bitbadges.io/api/v0
# components:

#   schemas:
#     ErrorResponse:
#       type: object
#       required:
#         - errorMessage
#       properties:
#         error:
#           type: object
#           description: Serialized error object for debugging purposes. Technical users can use this to debug issues.
#         errorMessage:
#           type: string
#           description: UX-friendly error message that can be displayed to the user. Always present if error.
#         unauthorized:
#           type: boolean
#           description: Authentication error. Present if the user is not authenticated.
#     StatusResponse:
#       type: object
#       properties:
#         block:
#           $ref: '#/components/schemas/LatestBlockStatus'
#         nextCollectionId:
#           $ref: '#/components/schemas/NumberType'
#         gasPrice:
#           type: number
#         lastXGasAmounts:
#           type: array
#           items:
#             $ref: '#/components/schemas/NumberType'
#         lastXGasLimits:
#           type: array
#           items:
#             $ref: '#/components/schemas/NumberType'
#     LatestBlockStatus:
#       type: object
#       properties:
#         height:
#           $ref: '#/components/schemas/NumberType'
#         txIndex:
#           $ref: '#/components/schemas/NumberType'
#         timestamp:
#           $ref: '#/components/schemas/NumberType'
#     NumberType:
#       type: string
#       example: '123'
#       description: Number types will always be stringified for responses to avoid precision issues. When passing in requests, the API supports string, number, and bigint types.
#     SearchRequestBody:
#       type: object
#       properties:
#         noCollections:
#           type: boolean
#           description: If true, skip all collection queries.
#         noAccounts:
#           type: boolean
#           description: If true, skip all account queries.
#         noAddressLists:
#           type: boolean
#           description: If true, skip all address list queries.
#         noBadges:
#           type: boolean
#           description: If true, skip all badge queries.
#         specificCollectionId:
#           $ref: '#/components/schemas/NumberType'
#       required:
#         - noCollections
#         - noAccounts
#         - noAddressLists
#         - noBadges
#     SearchSuccessResponse:
#       type: object
#       properties:
#         collections:
#           type: array
#           # items:
#           #   $ref: '#/components/schemas/BitBadgesCollection'
#         accounts:
#           type: array
#           # items:
#           #   $ref: '#/components/schemas/BitBadgesUserInfo'
#         addressLists:
#           type: array
#           # items:
#           #   $ref: '#/components/schemas/BitBadgesAddressList'
#         badges:
#           type: array
#           items:
#             type: object
#             properties:
#               # collection:
#               #   $ref: '#/components/schemas/BitBadgesCollection'
#               badgeIds:
#                 type: array
#                 # items:
#                 #   $ref: '#/components/schemas/UintRange'
#     GetCollectionBatchBody:
#       type: object
#       properties:
#         collectionsToFetch:
#           type: array
#           items:
#             type: object
#             properties:
#               collectionId:
#                 $ref: '#/components/schemas/NumberType'
#               metadataToFetch:
#                 $ref: '#/components/schemas/MetadataFetchOptions'
#               viewsToFetch:
#                 type: array
#                 items:
#                   $ref: '#/components/schemas/CollectionViewRequest'
#               fetchTotalAndMintBalances:
#                 type: boolean
#               challengeTrackersToFetch:
#                 type: array
#                 items:
#                   $ref: '#/components/schemas/ChallengeTrackerIdDetails'
#               approvalTrackersToFetch:
#                 type: array
#                 items:
#                   $ref: '#/components/schemas/AmountTrackerIdDetails'
#               handleAllAndAppendDefaults:
#                 type: boolean
#               fetchPrivateParams:
#                 type: boolean

#     GetCollectionBatchRouteSuccessResponse:
#       type: object
#       properties:
#         collections:
#           type: array
#           # items:
#           #   $ref: '#/components/schemas/BitBadgesCollection'

#     MetadataFetchOptions:
#       type: object
#       properties:
#         badgeIds:
#           type: array
#           # items:
#           #   $ref: '#/components/schemas/UintRange'

#     CollectionViewRequest:
#       type: object
#       properties:
#         viewType:
#           type: string
#           enum:
#             - transferActivity
#             - reviews
#             - owners
#             - amountTrackers
#             - challengeTrackers
#         viewId:
#           type: string
#         bookmark:
#           type: string
#         oldestFirst:
#           type: boolean

#     ChallengeTrackerIdDetails:
#       type: object
#       properties:
#         collectionId:
#           $ref: '#/components/schemas/NumberType'
#         challengeId:
#           type: string
#         challengeLevel:
#           type: string
#           enum: [collection, incoming, outgoing, ""]
#         approverAddress:
#           type: string

#     AmountTrackerIdDetails:
#       type: object
#       properties:
#         collectionId:
#           $ref: '#/components/schemas/NumberType'
#         amountTrackerId:
#           type: string
#         approvalLevel:
#           type: string
#         approverAddress:
#           type: string
#         trackerType:
#           type: string
#         approvedAddress:
#           type: string

paths:
    /status:
        post:
            operationId: getStatus
            summary: Get Status
            description: |
                Gets the current status details about the blockchain / indexer (gas, block height, etc).
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/iGetStatusRouteSuccessResponse'
                    description: Returns the current status of the blockchain / indexer

                '400':
                    $ref: '#/components/responses/BadRequestResponse'
                '401':
                    $ref: '#/components/responses/UnauthorizedResponse'
                '500':
                    $ref: '#/components/responses/InternalServerErrorResponse'
            x-code-samples:
                - lang: typescript
                  label: BitBadges SDK
                  source: |
                      const res = await BitBadgesApi.getStatus();
                      console.log(res);
            parameters:
                - name: x-api-key
                  in: header
                  description: BitBadges API Key for authentication
                  required: true
                  schema:
                      type: string
            security:
                - apiKey: [] # This specifies that an API key is required for authentication
    /search/{searchValue}:
        post:
            operationId: searchByValue
            summary: Search
            description: |
                Searches for collections, badges, accounts, and address lists based on the provided search value.
            parameters:
                - name: searchValue
                  in: path
                  description: The value to search for.
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetSearchBody'
            responses:
                '200':
                    description: Success response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/iGetSearchRouteSuccessResponse'
                '400':
                    $ref: '#/components/responses/BadRequestResponse'
                '401':
                    $ref: '#/components/responses/UnauthorizedResponse'
                '500':
                    $ref: '#/components/responses/InternalServerErrorResponse'
            x-code-samples:
                - lang: typescript
                  label: BitBadges SDK
                  source: |
                      const res = await BitBadgesApi.searchByValue('searchValue', {
                        noCollections: false,
                        noAccounts: false,
                        noAddressLists: false,
                        noBadges: false,
                        specificCollectionId: '123'
                      });
                      console.log(res);
            security:
                - apiKey: [] # This specifies that an API key is required for authentication
    # /collection/batch:
    #   post:
    #     operationId: getCollectionsBatch
    #     summary: Retrieve badge collections and accompanying details
    #     description: |
    #       Retrieves badge collections and accompanying details based on the provided collection IDs.
    #     requestBody:
    #       required: true
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/GetCollectionBatchBody'
    #     responses:
    #       '200':
    #         description: Success response
    #         content:
    #           application/json:
    #             schema:
    #               $ref: '#/components/schemas/GetCollectionBatchRouteSuccessResponse'
    #       '400':
    #         $ref: '#/components/responses/BadRequestResponse'
    #       '401':
    #         $ref: '#/components/responses/UnauthorizedResponse'
    #       '500':
    #         $ref: '#/components/responses/InternalServerErrorResponse'
    #     x-code-samples:
    #       - lang: typescript
    #         label: BitBadges SDK
    #         source: |
    #           const res = await BitBadgesApi.getCollectionsBatch({
    #             collectionsToFetch: [
    #               {
    #                 collectionId: '123',
    #                 metadataToFetch: {
    #                   badgeIds: ['1-10']
    #                 },
    #                 viewsToFetch: [
    #                   {
    #                     viewType: 'transferActivity',
    #                     viewId: '123',
    #                     bookmark: '123',
    #                     oldestFirst: true
    #                   }
    #                 ],
    #                 fetchTotalAndMintBalances: true,
    #                 challengeTrackersToFetch: [
    #                   {
    #                     collectionId: '123',
    #                     challengeId: '123',
    #                     challengeLevel: 'collection',
    #                     approverAddress: 'cosmos1...'
    #                   }
    #                 ],
    #                 approvalTrackersToFetch: [
    #                   {
    #                     collectionId: '123',
    #                     amountTrackerId: '123',
    #                     approvalLevel: 'collection',
    #                     approverAddress: 'cosmos1...',
    #                     trackerType: 'mint',
    #                     approvedAddress: 'cosmos1...'
    #                   }
    #                 ],
    #                 handleAllAndAppendDefaults: true,
    #                 fetchPrivateParams: true
    #               }
    #             ]
    #           });
    #           console.log(res);
    #     security:
    #       - apiKey: [] # This specifies that an API key is required for authentication
components:
    responses:
        ErrorResponse:
            description: An error response
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorResponse'
        BadRequestResponse:
            description: Bad Request - Invalid configuration or request
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorResponse'
        UnauthorizedResponse:
            description: Unauthorized - Does not meet authnetication requirements. This can be due to an invalid API key, CORS origin, or session cookie.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorResponse'
        InternalServerErrorResponse:
            description: Internal Server Error
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ErrorResponse'
    securitySchemes:
        apiKey:
            type: apiKey
            in: header
            name: x-api-key
            description: Requires a BitBadges API key for requests
            x-type: string
        frontendOnly:
            type: apiKey
            in: header
            name: Origin
            description: Can only be called by the official BitBadges frontend. Not for developer use.
        userSignedIn:
            type: http
            scheme: cookie
            description: User must be signed in with a valid session.
        userMaybeSignedIn:
            type: http
            scheme: cookie
            description: User must be signed in for certain requests, but not all.
        userIsManager:
            type: http
            scheme: cookie
            description: User must be signed in and have manager permissions.
        userIsOwner:
            type: http
            scheme: cookie
            description: User must be signed in and have owner permissions.
    schemas:
        ErrorResponse:
            type: object
            required:
                - errorMessage
            properties:
                error:
                    type: object
                    description: Serialized error object for debugging purposes. Technical users can use this to debug issues.
                errorMessage:
                    type: string
                    description: UX-friendly error message that can be displayed to the user. Always present if error.
                unauthorized:
                    type: boolean
                    description: Authentication error. Present if the user is not authenticated.
        EIP712Type:
            properties:
                name:
                    title: EIP712Type.name
                    type: string
                type:
                    title: EIP712Type.type
                    type: string
            required:
                - name
                - type
            additionalProperties: false
            title: EIP712Type
            type: object
        iMetadata:
            properties:
                name:
                    title: iMetadata.name
                    description: The name of the badge or badge collection.
                    type: string
                description:
                    title: iMetadata.description
                    description: The description of the badge or badge collection.
                    type: string
                image:
                    title: iMetadata.image
                    description: The image of the badge or badge collection.
                    type: string
                video:
                    title: iMetadata.video
                    description: >-
                        The video of the badge or badge collection. If a standard video is
                        used, this should be a link to the video. We will use image as the
                        poster image. If a youtube video is used, we embed it as an iframe.
                    type: string
                creator:
                    title: iMetadata.creator
                    description: The creator of the badge or badge collection.
                    type: string
                color:
                    title: iMetadata.color
                    description: The color of the badge or badge collection.
                    type: string
                category:
                    title: iMetadata.category
                    description: >-
                        The category of the badge or badge collection (e.g. "Education",
                        "Attendance").
                    type: string
                externalUrl:
                    title: iMetadata.externalUrl
                    description: The external URL of the badge or badge collection.
                    type: string
                tags:
                    items:
                        title: iMetadata.tags.[]
                        type: string
                    title: iMetadata.tags
                    description: The tags of the badge or badge collection
                    type: array
                socials:
                    additionalProperties:
                        type: string
                    title: iMetadata.socials
                    description: The socials of the badge or badge collection
                    type: object
                offChainTransferabilityInfo:
                    properties:
                        host:
                            title: iMetadata.offChainTransferabilityInfo.host
                            type: string
                        assignMethod:
                            title: iMetadata.offChainTransferabilityInfo.assignMethod
                            type: string
                    required:
                        - host
                        - assignMethod
                    additionalProperties: false
                    title: iMetadata.offChainTransferabilityInfo
                    description: The off-chain transferability info of the badge or badge collection
                    type: object
                attributes:
                    items:
                        properties:
                            type:
                                enum:
                                    - date
                                    - url
                                title: iMetadata.attributes.[].type
                                type: string
                            name:
                                title: iMetadata.attributes.[].name
                                type: string
                            value:
                                title: iMetadata.attributes.[].value
                                anyOf:
                                    - type: string
                                    - type: number
                                    - type: boolean
                        required:
                            - name
                            - value
                        additionalProperties: false
                        title: iMetadata.attributes.[]
                        type: object
                    title: iMetadata.attributes
                    description: The attributes of the badge or badge collection
                    type: array
                fetchedAtBlock:
                    title: iMetadata.fetchedAtBlock
                    description: The block the metadata was fetched at.
                    anyOf:
                        - type: string
                        - type: number
                fetchedAt:
                    title: iMetadata.fetchedAt
                    description: The time the metadata was fetched.
                    anyOf:
                        - type: string
                        - type: number
                _isUpdating:
                    title: iMetadata._isUpdating
                    description: Whether the metadata is currently being updated.
                    type: boolean
            required:
                - name
                - description
                - image
            additionalProperties: false
            title: iMetadata
            description: '@category Interfaces'
            type: object
        iProtocol:
            properties:
                name:
                    title: iProtocol.name
                    description: The name of the protocol.
                    type: string
                uri:
                    title: iProtocol.uri
                    description: The URI of the protocol.
                    type: string
                customData:
                    title: iProtocol.customData
                    description: The custom data of the protocol.
                    type: string
                createdBy:
                    title: iProtocol.createdBy
                    description: The cosmos address of the user who created the protocol.
                    type: string
                isFrozen:
                    title: iProtocol.isFrozen
                    description: Whether the protocol is frozen or not.
                    type: boolean
            required:
                - name
                - uri
                - customData
                - createdBy
                - isFrozen
            additionalProperties: false
            title: iProtocol
            description: '@category Interfaces'
            type: object
        iMsgUpdateProtocol:
            properties:
                creator:
                    title: iMsgUpdateProtocol.creator
                    description: The creator of the protocol.
                    type: string
                name:
                    title: iMsgUpdateProtocol.name
                    description: The name of the protocol.
                    type: string
                uri:
                    title: iMsgUpdateProtocol.uri
                    description: The URI for the protocol.
                    type: string
                customData:
                    title: iMsgUpdateProtocol.customData
                    description: Custom data for the protocol.
                    type: string
                isFrozen:
                    title: iMsgUpdateProtocol.isFrozen
                    description: Whether the protocol is frozen.
                    type: boolean
            required:
                - creator
                - name
                - uri
                - customData
                - isFrozen
            additionalProperties: false
            title: iMsgUpdateProtocol
            description: '@category Interfaces'
            type: object
        iMsgUnsetCollectionForProtocol:
            properties:
                creator:
                    title: iMsgUnsetCollectionForProtocol.creator
                    description: The creator of the protocol.
                    type: string
                name:
                    title: iMsgUnsetCollectionForProtocol.name
                    description: The name of the protocol.
                    type: string
            required:
                - creator
                - name
            additionalProperties: false
            title: iMsgUnsetCollectionForProtocol
            description: '@category Interfaces'
            type: object
        iMsgSetCollectionForProtocol:
            properties:
                creator:
                    title: iMsgSetCollectionForProtocol.creator
                    description: The creator of the protocol.
                    type: string
                name:
                    title: iMsgSetCollectionForProtocol.name
                    description: The name of the protocol.
                    type: string
                collectionId:
                    title: iMsgSetCollectionForProtocol.collectionId
                    description: The collection id for the protocol.
                    anyOf:
                        - type: string
                        - type: number
            required:
                - creator
                - name
                - collectionId
            additionalProperties: false
            title: iMsgSetCollectionForProtocol
            description: '@category Interfaces'
            type: object
        iMsgDeleteProtocol:
            properties:
                creator:
                    title: iMsgDeleteProtocol.creator
                    description: The creator of the protocol.
                    type: string
                name:
                    title: iMsgDeleteProtocol.name
                    description: The name of the protocol.
                    type: string
            required:
                - creator
                - name
            additionalProperties: false
            title: iMsgDeleteProtocol
            description: '@category Interfaces'
            type: object
        iMsgCreateProtocol:
            properties:
                creator:
                    title: iMsgCreateProtocol.creator
                    description: The creator of the protocol.
                    type: string
                name:
                    title: iMsgCreateProtocol.name
                    description: The name of the protocol.
                    type: string
                uri:
                    title: iMsgCreateProtocol.uri
                    description: The URI for the protocol.
                    type: string
                customData:
                    title: iMsgCreateProtocol.customData
                    description: Custom data for the protocol.
                    type: string
                isFrozen:
                    title: iMsgCreateProtocol.isFrozen
                    description: Whether the protocol is frozen.
                    type: boolean
            required:
                - creator
                - name
                - uri
                - customData
                - isFrozen
            additionalProperties: false
            title: iMsgCreateProtocol
            description: '@category Interfaces'
            type: object
        GetProtocolsBody:
            properties:
                names:
                    items:
                        title: GetProtocolsBody.names.[]
                        type: string
                    title: GetProtocolsBody.names
                    type: array
            required:
                - names
            additionalProperties: false
            title: GetProtocolsBody
            description: '@category API Requests / Responses'
            type: object
        iGetProtocolsRouteSuccessResponse:
            properties:
                protocols:
                    items: {}
                    title: iGetProtocolsRouteSuccessResponse.protocols
                    type: array
            required:
                - protocols
            additionalProperties: false
            title: iGetProtocolsRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        GetCollectionForProtocolBody:
            properties:
                name:
                    title: GetCollectionForProtocolBody.name
                    type: string
                address:
                    title: GetCollectionForProtocolBody.address
                    type: string
            required:
                - name
                - address
            additionalProperties: false
            title: GetCollectionForProtocolBody
            description: '@category API Requests / Responses'
            type: object
        iGetCollectionForProtocolRouteSuccessResponse:
            properties:
                collectionId:
                    title: iGetCollectionForProtocolRouteSuccessResponse.collectionId
                    anyOf:
                        - type: string
                        - type: number
            required:
                - collectionId
            additionalProperties: false
            title: iGetCollectionForProtocolRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        iNotificationPreferences:
            properties:
                email:
                    title: iNotificationPreferences.email
                    type: string
                emailVerification:
                    $ref: '#/components/schemas/iEmailVerificationStatus'
                    title: iNotificationPreferences.emailVerification
                preferences:
                    properties:
                        listActivity:
                            title: iNotificationPreferences.preferences.listActivity
                            type: boolean
                        transferActivity:
                            title: iNotificationPreferences.preferences.transferActivity
                            type: boolean
                        claimAlerts:
                            title: iNotificationPreferences.preferences.claimAlerts
                            type: boolean
                    additionalProperties: false
                    title: iNotificationPreferences.preferences
                    type: object
            additionalProperties: false
            title: iNotificationPreferences
            description: '@category Interfaces'
            type: object
        iEmailVerificationStatus:
            properties:
                verified:
                    title: iEmailVerificationStatus.verified
                    type: boolean
                token:
                    title: iEmailVerificationStatus.token
                    type: string
                expiry:
                    title: iEmailVerificationStatus.expiry
                    anyOf:
                        - type: string
                        - type: number
                antiPhishingCode:
                    title: iEmailVerificationStatus.antiPhishingCode
                    type: string
            additionalProperties: false
            title: iEmailVerificationStatus
            description: '@category Interfaces'
            type: object
        iActivityDoc:
            properties:
                timestamp:
                    title: iActivityDoc.timestamp
                    description: The timestamp  of the activity.
                    anyOf:
                        - type: string
                        - type: number
                block:
                    title: iActivityDoc.block
                    description: The block number of the activity.
                    anyOf:
                        - type: string
                        - type: number
                _notificationsHandled:
                    title: iActivityDoc._notificationsHandled
                    description: >-
                        Whether or not the notifications have been handled by the indexer or
                        not.
                    type: boolean
            required:
                - timestamp
                - block
            additionalProperties: false
            title: iActivityDoc
            description: '@category Interfaces'
            type: object
        iReviewDoc:
            properties:
                timestamp:
                    title: iActivityDoc.timestamp
                    description: The timestamp  of the activity.
                    anyOf:
                        - type: string
                        - type: number
                block:
                    title: iActivityDoc.block
                    description: The block number of the activity.
                    anyOf:
                        - type: string
                        - type: number
                _notificationsHandled:
                    title: iActivityDoc._notificationsHandled
                    description: >-
                        Whether or not the notifications have been handled by the indexer or
                        not.
                    type: boolean
                review:
                    title: iReviewDoc.review
                    description: The review text (max 2048 characters).
                    type: string
                stars:
                    title: iReviewDoc.stars
                    description: The number of stars given (1-5).
                    anyOf:
                        - type: string
                        - type: number
                from:
                    title: iReviewDoc.from
                    description: The cosmos address of the user who gave the review.
                    type: string
                collectionId:
                    title: iReviewDoc.collectionId
                    description: >-
                        The collection ID of the collection that was reviewed. Only
                        applicable to collection reviews.
                    anyOf:
                        - type: string
                        - type: number
                reviewedAddress:
                    title: iReviewDoc.reviewedAddress
                    description: >-
                        The cosmos address of the user who the review is for. Only
                        applicable to user reviews.
                    type: string
            required:
                - timestamp
                - block
                - review
                - stars
                - from
            additionalProperties: false
            title: iReviewDoc, iActivityDoc
            description: '@category Interfaces'
            type: object
        iTransferActivityDoc:
            properties:
                timestamp:
                    title: iActivityDoc.timestamp
                    description: The timestamp  of the activity.
                    anyOf:
                        - type: string
                        - type: number
                block:
                    title: iActivityDoc.block
                    description: The block number of the activity.
                    anyOf:
                        - type: string
                        - type: number
                _notificationsHandled:
                    title: iActivityDoc._notificationsHandled
                    description: >-
                        Whether or not the notifications have been handled by the indexer or
                        not.
                    type: boolean
                to:
                    items:
                        title: iTransferActivityDoc.to.[]
                        type: string
                    title: iTransferActivityDoc.to
                    description: The list of cosmos addresses that were involved in the activity.
                    type: array
                from:
                    title: iTransferActivityDoc.from
                    description: The list of cosmos addresses that were involved in the activity.
                    type: string
                balances:
                    items: {}
                    title: iTransferActivityDoc.balances
                    description: The list of balances and badge IDs that were transferred.
                    type: array
                collectionId:
                    title: iTransferActivityDoc.collectionId
                    description: The collection ID of the collection that was transferred.
                    anyOf:
                        - type: string
                        - type: number
                memo:
                    title: iTransferActivityDoc.memo
                    description: The memo of the transfer.
                    type: string
                precalculateBalancesFromApproval:
                    title: iTransferActivityDoc.precalculateBalancesFromApproval
                    description: Which approval to use to precalculate the balances.
                prioritizedApprovals:
                    items: {}
                    title: iTransferActivityDoc.prioritizedApprovals
                    description: The prioritized approvals of the transfer.
                    type: array
                onlyCheckPrioritizedApprovals:
                    title: iTransferActivityDoc.onlyCheckPrioritizedApprovals
                    description: Whether or not to only check prioritized approvals.
                    type: boolean
                initiatedBy:
                    title: iTransferActivityDoc.initiatedBy
                    description: The cosmos address of the user who initiated the activity.
                    type: string
                txHash:
                    title: iTransferActivityDoc.txHash
                    description: The transaction hash of the activity.
                    type: string
            required:
                - timestamp
                - block
                - to
                - from
                - balances
                - collectionId
                - initiatedBy
            additionalProperties: false
            title: iTransferActivityDoc, iActivityDoc
            description: '@category Interfaces'
            type: object
        iListActivityDoc:
            properties:
                timestamp:
                    title: iActivityDoc.timestamp
                    description: The timestamp  of the activity.
                    anyOf:
                        - type: string
                        - type: number
                block:
                    title: iActivityDoc.block
                    description: The block number of the activity.
                    anyOf:
                        - type: string
                        - type: number
                _notificationsHandled:
                    title: iActivityDoc._notificationsHandled
                    description: >-
                        Whether or not the notifications have been handled by the indexer or
                        not.
                    type: boolean
                listId:
                    title: iListActivityDoc.listId
                    description: The list ID of the list.
                    type: string
                addedToList:
                    title: iListActivityDoc.addedToList
                    description: >-
                        Whether or not the address is included in the list. Note that this
                        could mean added to an whitelist or a blacklist
                    type: boolean
                addresses:
                    items:
                        title: iListActivityDoc.addresses.[]
                        type: string
                    title: iListActivityDoc.addresses
                    description: The list of addresses that were added or removed from the list.
                    type: array
                txHash:
                    title: iListActivityDoc.txHash
                    description: The transaction hash of the activity.
                    type: string
            required:
                - timestamp
                - block
                - listId
            additionalProperties: false
            title: iListActivityDoc, iActivityDoc
            description: '@category Interfaces'
            type: object
        iClaimAlertDoc:
            properties:
                timestamp:
                    title: iActivityDoc.timestamp
                    description: The timestamp  of the activity.
                    anyOf:
                        - type: string
                        - type: number
                block:
                    title: iActivityDoc.block
                    description: The block number of the activity.
                    anyOf:
                        - type: string
                        - type: number
                _notificationsHandled:
                    title: iActivityDoc._notificationsHandled
                    description: >-
                        Whether or not the notifications have been handled by the indexer or
                        not.
                    type: boolean
                code:
                    title: iClaimAlertDoc.code
                    description: The code of the claim alert.
                    type: string
                cosmosAddresses:
                    items:
                        title: iClaimAlertDoc.cosmosAddresses.[]
                        type: string
                    title: iClaimAlertDoc.cosmosAddresses
                    description: The cosmos addresses of the users that have been alerted.
                    type: array
                collectionId:
                    title: iClaimAlertDoc.collectionId
                    description: The collection ID of the claim alert.
                    anyOf:
                        - type: string
                        - type: number
                message:
                    title: iClaimAlertDoc.message
                    description: The message of the claim alert.
                    type: string
            required:
                - timestamp
                - block
                - cosmosAddresses
                - collectionId
            additionalProperties: false
            title: iClaimAlertDoc, iActivityDoc
            description: '@category Interfaces'
            type: object
        iCollectionDoc:
            properties:
                collectionId:
                    title: iCollectionDoc.collectionId
                    description: The collection ID
                    anyOf:
                        - type: string
                        - type: number
                collectionMetadataTimeline:
                    items: {}
                    title: iCollectionDoc.collectionMetadataTimeline
                    description: The collection metadata timeline
                    type: array
                badgeMetadataTimeline:
                    items: {}
                    title: iCollectionDoc.badgeMetadataTimeline
                    description: The badge metadata timeline
                    type: array
                balancesType:
                    enum:
                        - Standard
                        - Off-Chain - Indexed
                        - Inherited
                        - Off-Chain - Non-Indexed
                    title: iCollectionDoc.balancesType
                    description: >-
                        The type of balances (i.e. "Standard", "Off-Chain - Indexed",
                        "Inherited, "Off-Chain - Non-Indexed")
                    type: string
                offChainBalancesMetadataTimeline:
                    items: {}
                    title: iCollectionDoc.offChainBalancesMetadataTimeline
                    description: The off-chain balances metadata timeline
                    type: array
                customDataTimeline:
                    items: {}
                    title: iCollectionDoc.customDataTimeline
                    description: The custom data timeline
                    type: array
                managerTimeline:
                    items: {}
                    title: iCollectionDoc.managerTimeline
                    description: The manager timeline
                    type: array
                collectionPermissions:
                    title: iCollectionDoc.collectionPermissions
                    description: The collection permissions
                collectionApprovals:
                    items: {}
                    title: iCollectionDoc.collectionApprovals
                    description: The collection approved transfers timeline
                    type: array
                standardsTimeline:
                    items: {}
                    title: iCollectionDoc.standardsTimeline
                    description: The standards timeline
                    type: array
                isArchivedTimeline:
                    items: {}
                    title: iCollectionDoc.isArchivedTimeline
                    description: The is archived timeline
                    type: array
                defaultBalances:
                    title: iCollectionDoc.defaultBalances
                    description: >-
                        The default balances for users who have not interacted with the
                        collection yet. Only used if collection has "Standard" balance type.
                createdBy:
                    title: iCollectionDoc.createdBy
                    description: The cosmos address of the user who created this collection
                    type: string
                createdBlock:
                    title: iCollectionDoc.createdBlock
                    description: The block number when this collection was created
                    anyOf:
                        - type: string
                        - type: number
                createdTimestamp:
                    title: iCollectionDoc.createdTimestamp
                    description: >-
                        The timestamp when this collection was created (milliseconds since
                        epoch)
                    anyOf:
                        - type: string
                        - type: number
                updateHistory:
                    items:
                        properties:
                            txHash:
                                title: iCollectionDoc.updateHistory.[].txHash
                                type: string
                            block:
                                title: iCollectionDoc.updateHistory.[].block
                                anyOf:
                                    - type: string
                                    - type: number
                            blockTimestamp:
                                title: iCollectionDoc.updateHistory.[].blockTimestamp
                                anyOf:
                                    - type: string
                                    - type: number
                        required:
                            - txHash
                            - block
                            - blockTimestamp
                        additionalProperties: false
                        title: iCollectionDoc.updateHistory.[]
                        type: object
                    title: iCollectionDoc.updateHistory
                    description: The update history of this collection
                    type: array
                aliasAddress:
                    title: iCollectionDoc.aliasAddress
                    description: The alias cosmos address for the collection
                    type: string
            required:
                - collectionId
                - collectionMetadataTimeline
                - badgeMetadataTimeline
                - balancesType
                - offChainBalancesMetadataTimeline
                - customDataTimeline
                - managerTimeline
                - collectionPermissions
                - collectionApprovals
                - standardsTimeline
                - isArchivedTimeline
                - defaultBalances
                - createdBy
                - createdBlock
                - createdTimestamp
                - updateHistory
                - aliasAddress
            additionalProperties: false
            title: iCollectionDoc
            description: '@category Interfaces'
            type: object
        iAccountDoc:
            properties:
                publicKey:
                    title: iAccountDoc.publicKey
                    description: The public key of the account
                    type: string
                accountNumber:
                    title: iAccountDoc.accountNumber
                    description: The account number of the account
                    anyOf:
                        - type: string
                        - type: number
                pubKeyType:
                    title: iAccountDoc.pubKeyType
                    description: The public key type of the account
                    type: string
                cosmosAddress:
                    title: iAccountDoc.cosmosAddress
                    description: The Cosmos address of the account
                    type: string
                ethAddress:
                    title: iAccountDoc.ethAddress
                    description: The Eth address of the account
                    type: string
                solAddress:
                    title: iAccountDoc.solAddress
                    description: The Solana address of the account
                    type: string
                btcAddress:
                    title: iAccountDoc.btcAddress
                    description: The Bitcoin address of the account
                    type: string
                sequence:
                    title: iAccountDoc.sequence
                    description: The sequence of the account
                    anyOf:
                        - type: string
                        - type: number
                balance:
                    title: iAccountDoc.balance
                    description: The balance of the account
            required:
                - publicKey
                - accountNumber
                - pubKeyType
                - cosmosAddress
                - ethAddress
                - solAddress
                - btcAddress
            additionalProperties: false
            title: iAccountDoc
            description: '@category Interfaces'
            type: object
        iCustomLink:
            properties:
                title:
                    title: iCustomLink.title
                    type: string
                url:
                    title: iCustomLink.url
                    type: string
                image:
                    title: iCustomLink.image
                    type: string
            required:
                - title
                - url
                - image
            additionalProperties: false
            title: iCustomLink
            description: |-
                CustomLinks are custom links that can be added to a profile.
                @category Interfaces
            type: object
        iCustomPage:
            properties:
                title:
                    title: iCustomPage.title
                    type: string
                description:
                    title: iCustomPage.description
                    type: string
                items:
                    items: {}
                    title: iCustomPage.items
                    type: array
            required:
                - title
                - description
                - items
            additionalProperties: false
            title: iCustomPage
            description: '@category Interfaces'
            type: object
        iCustomListPage:
            properties:
                title:
                    title: iCustomListPage.title
                    type: string
                description:
                    title: iCustomListPage.description
                    type: string
                items:
                    items:
                        title: iCustomListPage.items.[]
                        type: string
                    title: iCustomListPage.items
                    type: array
            required:
                - title
                - description
                - items
            additionalProperties: false
            title: iCustomListPage
            description: >-
                CustomListPage is a custom list page that can be added to a profile. The
                items are valid list IDs.

                @category Interfaces
            type: object
        iProfileDoc:
            properties:
                fetchedProfile:
                    title: iProfileDoc.fetchedProfile
                    description: Whether we have already fetched the profile or not
                    type: boolean
                seenActivity:
                    title: iProfileDoc.seenActivity
                    description: >-
                        The timestamp of the last activity seen for this account
                        (milliseconds since epoch)
                    anyOf:
                        - type: string
                        - type: number
                createdAt:
                    title: iProfileDoc.createdAt
                    description: >-
                        The timestamp of when this account was created (milliseconds since
                        epoch)
                    anyOf:
                        - type: string
                        - type: number
                discord:
                    title: iProfileDoc.discord
                    description: The Discord username of the account
                    type: string
                twitter:
                    title: iProfileDoc.twitter
                    description: The Twitter username of the account
                    type: string
                github:
                    title: iProfileDoc.github
                    description: The GitHub username of the account
                    type: string
                telegram:
                    title: iProfileDoc.telegram
                    description: The Telegram username of the account
                    type: string
                readme:
                    title: iProfileDoc.readme
                    description: The readme of the account
                    type: string
                customLinks:
                    items:
                        $ref: '#/components/schemas/iCustomLink'
                        title: iProfileDoc.customLinks.[]
                    title: iProfileDoc.customLinks
                    description: The custom links of the account
                    type: array
                hiddenBadges:
                    items: {}
                    title: iProfileDoc.hiddenBadges
                    description: The hidden badges of the account
                    type: array
                hiddenLists:
                    items:
                        title: iProfileDoc.hiddenLists.[]
                        type: string
                    title: iProfileDoc.hiddenLists
                    description: The hidden lists of the account
                    type: array
                customPages:
                    properties:
                        badges:
                            items:
                                $ref: '#/components/schemas/iCustomPage'
                                title: iProfileDoc.customPages.badges.[]
                            title: iProfileDoc.customPages.badges
                            type: array
                        lists:
                            items:
                                $ref: '#/components/schemas/iCustomListPage'
                                title: iProfileDoc.customPages.lists.[]
                            title: iProfileDoc.customPages.lists
                            type: array
                    required:
                        - badges
                        - lists
                    additionalProperties: false
                    title: iProfileDoc.customPages
                    description: The custom pages of the account
                    type: object
                watchlists:
                    properties:
                        badges:
                            items:
                                $ref: '#/components/schemas/iCustomPage'
                                title: iProfileDoc.watchlists.badges.[]
                            title: iProfileDoc.watchlists.badges
                            type: array
                        lists:
                            items:
                                $ref: '#/components/schemas/iCustomListPage'
                                title: iProfileDoc.watchlists.lists.[]
                            title: iProfileDoc.watchlists.lists
                            type: array
                    required:
                        - badges
                        - lists
                    additionalProperties: false
                    title: iProfileDoc.watchlists
                    description: The watched lists of the account's portfolio
                    type: object
                profilePicUrl:
                    title: iProfileDoc.profilePicUrl
                    description: The profile picture URL of the account
                    type: string
                username:
                    title: iProfileDoc.username
                    description: The username of the account
                    type: string
                latestSignedInChain:
                    title: iProfileDoc.latestSignedInChain
                    description: The latest chain the user signed in with
                solAddress:
                    title: iProfileDoc.solAddress
                    description: >-
                        The Solana address of the profile, if applicable (bc we need it to
                        convert)
                    type: string
                notifications:
                    $ref: '#/components/schemas/iNotificationPreferences'
                    title: iProfileDoc.notifications
                    description: The notifications of the account
                approvedSignInMethods:
                    properties:
                        discord:
                            properties:
                                username:
                                    title: iProfileDoc.approvedSignInMethods.discord.username
                                    type: string
                                discriminator:
                                    title: iProfileDoc.approvedSignInMethods.discord.discriminator
                                    type: string
                                id:
                                    title: iProfileDoc.approvedSignInMethods.discord.id
                                    type: string
                            required:
                                - username
                                - id
                            additionalProperties: false
                            title: iProfileDoc.approvedSignInMethods.discord
                            type: object
                    additionalProperties: false
                    title: iProfileDoc.approvedSignInMethods
                    description: Approved ways to sign in (rather than Blockin)
                    type: object
            additionalProperties: false
            title: iProfileDoc
            description: '@category Interfaces'
            type: object
        iQueueDoc:
            properties:
                uri:
                    title: iQueueDoc.uri
                    description: >-
                        The URI of the metadata to be fetched. If {id} is present, it will
                        be replaced with each individual ID in badgeIds
                    type: string
                collectionId:
                    title: iQueueDoc.collectionId
                    description: The collection ID of the metadata to be fetched
                    anyOf:
                        - type: string
                        - type: number
                loadBalanceId:
                    title: iQueueDoc.loadBalanceId
                    description: >-
                        The load balance ID of the metadata to be fetched. Only the node
                        with the same load balance ID will fetch this metadata
                    anyOf:
                        - type: string
                        - type: number
                refreshRequestTime:
                    title: iQueueDoc.refreshRequestTime
                    description: >-
                        The timestamp of when this metadata was requested to be refreshed
                        (milliseconds since epoch)
                    anyOf:
                        - type: string
                        - type: number
                numRetries:
                    title: iQueueDoc.numRetries
                    description: >-
                        The number of times this metadata has been tried to be fetched but
                        failed
                    anyOf:
                        - type: string
                        - type: number
                lastFetchedAt:
                    title: iQueueDoc.lastFetchedAt
                    description: >-
                        The timestamp of when this metadata was last fetched (milliseconds
                        since epoch)
                    anyOf:
                        - type: string
                        - type: number
                error:
                    title: iQueueDoc.error
                    description: The error message if this metadata failed to be fetched
                    type: string
                deletedAt:
                    title: iQueueDoc.deletedAt
                    description: >-
                        The timestamp of when this document was deleted (milliseconds since
                        epoch)
                    anyOf:
                        - type: string
                        - type: number
                nextFetchTime:
                    title: iQueueDoc.nextFetchTime
                    description: >-
                        The timestamp of when this document should be fetched next
                        (milliseconds since epoch)
                    anyOf:
                        - type: string
                        - type: number
                emailMessage:
                    title: iQueueDoc.emailMessage
                    type: string
                recipientAddress:
                    title: iQueueDoc.recipientAddress
                    type: string
                activityDocId:
                    title: iQueueDoc.activityDocId
                    type: string
                notificationType:
                    title: iQueueDoc.notificationType
                    type: string
            required:
                - uri
                - collectionId
                - loadBalanceId
                - refreshRequestTime
                - numRetries
            additionalProperties: false
            title: iQueueDoc
            description: '@category Interfaces'
            type: object
        iIndexerStatus:
            properties:
                status:
                    title: iIndexerStatus.status
            required:
                - status
            additionalProperties: false
            title: iIndexerStatus
            description: '@category Interfaces'
            type: object
        iLatestBlockStatus:
            properties:
                height:
                    title: iLatestBlockStatus.height
                    description: The height of the latest block
                    anyOf:
                        - type: string
                        - type: number
                txIndex:
                    title: iLatestBlockStatus.txIndex
                    description: The transaction index of the latest block
                    anyOf:
                        - type: string
                        - type: number
                timestamp:
                    title: iLatestBlockStatus.timestamp
                    description: The timestamp of the latest block (milliseconds since epoch)
                    anyOf:
                        - type: string
                        - type: number
            required:
                - height
                - txIndex
                - timestamp
            additionalProperties: false
            title: iLatestBlockStatus
            description: '@category Interfaces'
            type: object
        iStatusDoc:
            properties:
                block:
                    $ref: '#/components/schemas/iLatestBlockStatus'
                    title: iStatusDoc.block
                    description: The latest synced block status (i.e. height, txIndex, timestamp)
                nextCollectionId:
                    title: iStatusDoc.nextCollectionId
                    description: The next collection ID to be used
                    anyOf:
                        - type: string
                        - type: number
                gasPrice:
                    title: iStatusDoc.gasPrice
                    description: The current gas price based on the average of the lastXGasAmounts
                    type: number
                lastXGasAmounts:
                    items:
                        title: iStatusDoc.lastXGasAmounts.[]
                        anyOf:
                            - type: string
                            - type: number
                    title: iStatusDoc.lastXGasAmounts
                    description: The last X gas prices
                    type: array
                lastXGasLimits:
                    items:
                        title: iStatusDoc.lastXGasLimits.[]
                        anyOf:
                            - type: string
                            - type: number
                    title: iStatusDoc.lastXGasLimits
                    description: The last X gas limits
                    type: array
            required:
                - block
                - nextCollectionId
                - gasPrice
                - lastXGasAmounts
                - lastXGasLimits
            additionalProperties: false
            title: iStatusDoc
            description: '@category Interfaces'
            type: object
        iAddressListEditKey:
            properties:
                key:
                    title: iAddressListEditKey.key
                    description: The key that can be used to edit the address list
                    type: string
                expirationDate:
                    title: iAddressListEditKey.expirationDate
                    description: The expiration date of the key (milliseconds since epoch)
                    anyOf:
                        - type: string
                        - type: number
                mustSignIn:
                    title: iAddressListEditKey.mustSignIn
                    description: True if the user can only add their signed in address to the list
                    type: boolean
            required:
                - key
                - expirationDate
            additionalProperties: false
            title: iAddressListEditKey
            description: '@category Interfaces'
            type: object
        iAddressListDoc:
            properties:
                createdBy:
                    title: iAddressListDoc.createdBy
                    description: The cosmos address of the user who created this list
                    type: string
                updateHistory:
                    items:
                        properties:
                            txHash:
                                title: iAddressListDoc.updateHistory.[].txHash
                                type: string
                            block:
                                title: iAddressListDoc.updateHistory.[].block
                                anyOf:
                                    - type: string
                                    - type: number
                            blockTimestamp:
                                title: iAddressListDoc.updateHistory.[].blockTimestamp
                                anyOf:
                                    - type: string
                                    - type: number
                        required:
                            - txHash
                            - block
                            - blockTimestamp
                        additionalProperties: false
                        title: iAddressListDoc.updateHistory.[]
                        type: object
                    title: iAddressListDoc.updateHistory
                    description: The update history of this list
                    type: array
                createdBlock:
                    title: iAddressListDoc.createdBlock
                    description: The block number when this list was created
                    anyOf:
                        - type: string
                        - type: number
                lastUpdated:
                    title: iAddressListDoc.lastUpdated
                    description: >-
                        The timestamp of when this list was last updated (milliseconds since
                        epoch)
                    anyOf:
                        - type: string
                        - type: number
                nsfw:
                    properties:
                        reason:
                            title: iAddressListDoc.nsfw.reason
                            type: string
                    required:
                        - reason
                    additionalProperties: false
                    title: iAddressListDoc.nsfw
                    description: The NSFW reason if this list is NSFW
                    type: object
                reported:
                    properties:
                        reason:
                            title: iAddressListDoc.reported.reason
                            type: string
                    required:
                        - reason
                    additionalProperties: false
                    title: iAddressListDoc.reported
                    description: The reported reason if this list is reported
                    type: object
                private:
                    title: iAddressListDoc.private
                    description: True if this list is private and will not show up in search results
                    type: boolean
                viewableWithLink:
                    title: iAddressListDoc.viewableWithLink
                    description: True if this list is viewable if queried by the list ID directly
                    type: boolean
            required:
                - createdBy
                - updateHistory
                - createdBlock
                - lastUpdated
            additionalProperties: false
            title: iAddressListDoc
            description: '@category Interfaces'
            type: object
        iBalanceDoc:
            properties:
                collectionId:
                    title: iBalanceDoc.collectionId
                    description: The collection ID
                    anyOf:
                        - type: string
                        - type: number
                cosmosAddress:
                    title: iBalanceDoc.cosmosAddress
                    description: The Cosmos address of the user
                    type: string
                onChain:
                    title: iBalanceDoc.onChain
                    description: True if the balances are on-chain
                    type: boolean
                uri:
                    title: iBalanceDoc.uri
                    description: The URI of the off-chain balances
                    type: string
                fetchedAt:
                    title: iBalanceDoc.fetchedAt
                    description: >-
                        The timestamp of when the off-chain balances were fetched
                        (milliseconds since epoch). For BitBadges indexer, we only populate
                        this for Mint and Total docs.
                    anyOf:
                        - type: string
                        - type: number
                fetchedAtBlock:
                    title: iBalanceDoc.fetchedAtBlock
                    description: >-
                        The block number of when the off-chain balances were fetched. For
                        BitBadges indexer, we only populate this for Mint and Total docs.
                    anyOf:
                        - type: string
                        - type: number
                isPermanent:
                    title: iBalanceDoc.isPermanent
                    description: True if the off-chain balances are using permanent storage
                    type: boolean
                contentHash:
                    title: iBalanceDoc.contentHash
                    description: The content hash of the off-chain balances
                    type: string
                updateHistory:
                    items:
                        properties:
                            txHash:
                                title: iBalanceDoc.updateHistory.[].txHash
                                type: string
                            block:
                                title: iBalanceDoc.updateHistory.[].block
                                anyOf:
                                    - type: string
                                    - type: number
                            blockTimestamp:
                                title: iBalanceDoc.updateHistory.[].blockTimestamp
                                anyOf:
                                    - type: string
                                    - type: number
                        required:
                            - txHash
                            - block
                            - blockTimestamp
                        additionalProperties: false
                        title: iBalanceDoc.updateHistory.[]
                        type: object
                    title: iBalanceDoc.updateHistory
                    description: The update history of this balance
                    type: array
            required:
                - collectionId
                - cosmosAddress
                - onChain
                - updateHistory
            additionalProperties: false
            title: iBalanceDoc
            description: '@category Interfaces'
            type: object
        iBalanceDocWithDetails:
            properties:
                collectionId:
                    title: iBalanceDoc.collectionId
                    description: The collection ID
                    anyOf:
                        - type: string
                        - type: number
                cosmosAddress:
                    title: iBalanceDoc.cosmosAddress
                    description: The Cosmos address of the user
                    type: string
                onChain:
                    title: iBalanceDoc.onChain
                    description: True if the balances are on-chain
                    type: boolean
                uri:
                    title: iBalanceDoc.uri
                    description: The URI of the off-chain balances
                    type: string
                fetchedAt:
                    title: iBalanceDoc.fetchedAt
                    description: >-
                        The timestamp of when the off-chain balances were fetched
                        (milliseconds since epoch). For BitBadges indexer, we only populate
                        this for Mint and Total docs.
                    anyOf:
                        - type: string
                        - type: number
                fetchedAtBlock:
                    title: iBalanceDoc.fetchedAtBlock
                    description: >-
                        The block number of when the off-chain balances were fetched. For
                        BitBadges indexer, we only populate this for Mint and Total docs.
                    anyOf:
                        - type: string
                        - type: number
                isPermanent:
                    title: iBalanceDoc.isPermanent
                    description: True if the off-chain balances are using permanent storage
                    type: boolean
                contentHash:
                    title: iBalanceDoc.contentHash
                    description: The content hash of the off-chain balances
                    type: string
                updateHistory:
                    items:
                        properties:
                            txHash:
                                title: iBalanceDoc.updateHistory.[].txHash
                                type: string
                            block:
                                title: iBalanceDoc.updateHistory.[].block
                                anyOf:
                                    - type: string
                                    - type: number
                            blockTimestamp:
                                title: iBalanceDoc.updateHistory.[].blockTimestamp
                                anyOf:
                                    - type: string
                                    - type: number
                        required:
                            - txHash
                            - block
                            - blockTimestamp
                        additionalProperties: false
                        title: iBalanceDoc.updateHistory.[]
                        type: object
                    title: iBalanceDoc.updateHistory
                    description: The update history of this balance
                    type: array
                outgoingApprovals:
                    items: {}
                    title: iBalanceDocWithDetails.outgoingApprovals
                    description: The outgoing approvals with details like metadata and address lists.
                    type: array
                incomingApprovals:
                    items: {}
                    title: iBalanceDocWithDetails.incomingApprovals
                    description: The incoming approvals with details like metadata and address lists.
                    type: array
                userPermissions:
                    title: iBalanceDocWithDetails.userPermissions
                    description: The user permissions with details like metadata and address lists.
            required:
                - collectionId
                - cosmosAddress
                - onChain
                - updateHistory
                - outgoingApprovals
                - incomingApprovals
                - userPermissions
            additionalProperties: false
            title: iBalanceDocWithDetails, iBalanceDoc
            description: '@category Interfaces'
            type: object
        ClaimIntegrationPluginType:
            enum:
                - password
                - numUses
                - greaterThanXBADGEBalance
                - discord
                - codes
                - twitter
                - transferTimes
                - requiresProofOfAddress
                - whitelist
                - mustOwnBadges
                - api
            title: ClaimIntegrationPluginType
            type: string
        JsonBodyInputWithValue:
            properties:
                key:
                    title: JsonBodyInputWithValue.key
                    type: string
                label:
                    title: JsonBodyInputWithValue.label
                    type: string
                type:
                    enum:
                        - date
                        - url
                    title: JsonBodyInputWithValue.type
                    type: string
                value:
                    title: JsonBodyInputWithValue.value
                    anyOf:
                        - type: string
                        - type: number
                        - type: boolean
            required:
                - key
                - label
                - value
            additionalProperties: false
            title: JsonBodyInputWithValue
            type: object
        JsonBodyInputSchema:
            properties:
                key:
                    title: JsonBodyInputSchema.key
                    type: string
                label:
                    title: JsonBodyInputSchema.label
                    type: string
                type:
                    enum:
                        - date
                        - url
                        - string
                        - number
                        - boolean
                    title: JsonBodyInputSchema.type
                    type: string
                helper:
                    title: JsonBodyInputSchema.helper
                    type: string
            required:
                - key
                - label
                - type
            additionalProperties: false
            title: JsonBodyInputSchema
            type: object
        ClaimApiCallInfo:
            properties:
                uri:
                    title: ClaimApiCallInfo.uri
                    type: string
                name:
                    title: ClaimApiCallInfo.name
                    type: string
                description:
                    title: ClaimApiCallInfo.description
                    type: string
                passDiscord:
                    title: ClaimApiCallInfo.passDiscord
                    type: boolean
                passTwitter:
                    title: ClaimApiCallInfo.passTwitter
                    type: boolean
                bodyParams:
                    title: ClaimApiCallInfo.bodyParams
                    type: object
                userInputsSchema:
                    items:
                        $ref: '#/components/schemas/JsonBodyInputSchema'
                    title: ClaimApiCallInfo.userInputsSchema
                    type: array
            required:
                - uri
                - name
                - userInputsSchema
            additionalProperties: false
            title: ClaimApiCallInfo
            type: object
        iClaimBuilderDoc:
            properties:
                cid:
                    title: iClaimBuilderDoc.cid
                    description: The CID of the password document
                    type: string
                createdBy:
                    title: iClaimBuilderDoc.createdBy
                    description: The cosmos address of the user who created this password
                    type: string
                docClaimed:
                    title: iClaimBuilderDoc.docClaimed
                    description: True if the password document is claimed by the collection
                    type: boolean
                collectionId:
                    title: iClaimBuilderDoc.collectionId
                    description: The collection ID of the password document
                    anyOf:
                        - type: string
                        - type: number
                plugins:
                    items: {}
                    title: iClaimBuilderDoc.plugins
                    description: Dynamic checks to run in the form of plugins
                    type: array
                manualDistribution:
                    title: iClaimBuilderDoc.manualDistribution
                    description: >-
                        If true, the claim codes are to be distributed manually. This doc
                        will only be used for storage purposes.
                    type: boolean
                state:
                    additionalProperties: {}
                    title: iClaimBuilderDoc.state
                    description: The current state of each plugin
                    type: object
                action:
                    properties:
                        codes:
                            items:
                                title: iClaimBuilderDoc.action.codes.[]
                                type: string
                            title: iClaimBuilderDoc.action.codes
                            type: array
                        seedCode:
                            title: iClaimBuilderDoc.action.seedCode
                            type: string
                        balancesToSet:
                            title: iClaimBuilderDoc.action.balancesToSet
                        listId:
                            title: iClaimBuilderDoc.action.listId
                            type: string
                    additionalProperties: false
                    title: iClaimBuilderDoc.action
                    description: Details for the action to perform if the criteria is correct
                    type: object
            required:
                - cid
                - createdBy
                - docClaimed
                - collectionId
                - plugins
                - state
                - action
            additionalProperties: false
            title: iClaimBuilderDoc
            description: '@category Interfaces'
            type: object
        iApprovalTrackerDoc:
            properties:
                numTransfers:
                    title: iApprovalTrackerDoc.numTransfers
                    description: The number of transfers. Is an incrementing tally.
                    anyOf:
                        - type: string
                        - type: number
                amounts:
                    items: {}
                    title: iApprovalTrackerDoc.amounts
                    description: A tally of the amounts transferred for this approval.
                    type: array
            required:
                - numTransfers
                - amounts
            additionalProperties: false
            title: iApprovalTrackerDoc
            description: '@category Interfaces'
            type: object
        iChallengeTrackerIdDetails:
            properties:
                collectionId:
                    title: iChallengeTrackerIdDetails.collectionId
                    description: The collection ID
                    anyOf:
                        - type: string
                        - type: number
                challengeId:
                    title: iChallengeTrackerIdDetails.challengeId
                    description: The challenge ID
                    type: string
                challengeLevel:
                    enum:
                        - collection
                        - incoming
                        - outgoing
                        - ''
                    title: iChallengeTrackerIdDetails.challengeLevel
                    description: The challenge level (i.e. "collection", "incoming", "outgoing")
                    type: string
                approverAddress:
                    title: iChallengeTrackerIdDetails.approverAddress
                    description: The approver address (leave blank if challengeLevel = "collection")
                    type: string
            required:
                - collectionId
                - challengeId
                - challengeLevel
                - approverAddress
            additionalProperties: false
            title: iChallengeTrackerIdDetails
            description: '@category Interfaces'
            type: object
        iMerkleChallengeDoc:
            properties:
                collectionId:
                    title: iMerkleChallengeDoc.collectionId
                    description: The collection ID
                    anyOf:
                        - type: string
                        - type: number
                challengeId:
                    title: iMerkleChallengeDoc.challengeId
                    description: The challenge ID
                    type: string
                challengeLevel:
                    enum:
                        - collection
                        - incoming
                        - outgoing
                        - ''
                    title: iMerkleChallengeDoc.challengeLevel
                    description: The challenge level (i.e. "collection", "incoming", "outgoing")
                    type: string
                approverAddress:
                    title: iMerkleChallengeDoc.approverAddress
                    description: The approver address (leave blank if challengeLevel = "collection")
                    type: string
                usedLeafIndices:
                    items:
                        title: iMerkleChallengeDoc.usedLeafIndices.[]
                        anyOf:
                            - type: string
                            - type: number
                    title: iMerkleChallengeDoc.usedLeafIndices
                    description: >-
                        The used leaf indices for each challenge. A leaf index is the leaf
                        location in the bottommost layer of the Merkle tree
                    type: array
            required:
                - collectionId
                - challengeId
                - challengeLevel
                - approverAddress
                - usedLeafIndices
            additionalProperties: false
            title: iMerkleChallengeDoc
            description: '@category Interfaces'
            type: object
        iMerkleChallengeIdDetails:
            properties:
                collectionId:
                    title: iMerkleChallengeIdDetails.collectionId
                    description: The collection ID
                    anyOf:
                        - type: string
                        - type: number
                challengeId:
                    title: iMerkleChallengeIdDetails.challengeId
                    description: The challenge ID
                    type: string
                challengeLevel:
                    enum:
                        - collection
                        - incoming
                        - outgoing
                        - ''
                    title: iMerkleChallengeIdDetails.challengeLevel
                    description: The challenge level (i.e. "collection", "incoming", "outgoing")
                    type: string
                approverAddress:
                    title: iMerkleChallengeIdDetails.approverAddress
                    description: The approver address (leave blank if challengeLevel = "collection")
                    type: string
                usedLeafIndices:
                    items:
                        title: iMerkleChallengeIdDetails.usedLeafIndices.[]
                        anyOf:
                            - type: string
                            - type: number
                    title: iMerkleChallengeIdDetails.usedLeafIndices
                    description: >-
                        The used leaf indices for each challenge. A leaf index is the leaf
                        location in the bottommost layer of the Merkle tree
                    type: array
            required:
                - collectionId
                - challengeId
                - challengeLevel
                - approverAddress
                - usedLeafIndices
            additionalProperties: false
            title: iMerkleChallengeIdDetails
            description: '@category Interfaces'
            type: object
        iFetchDoc:
            properties:
                content:
                    anyOf: []
                    title: iFetchDoc.content
                    description: >-
                        The content of the fetch document. Note that we store balances in
                        BALANCES_DB and not here to avoid double storage.
                fetchedAt:
                    title: iFetchDoc.fetchedAt
                    description: The time the document was fetched
                    anyOf:
                        - type: string
                        - type: number
                fetchedAtBlock:
                    title: iFetchDoc.fetchedAtBlock
                    description: The block the document was fetched
                    anyOf:
                        - type: string
                        - type: number
                db:
                    enum:
                        - ApprovalInfo
                        - Metadata
                        - Balances
                    title: iFetchDoc.db
                    description: The type of content fetched. This is used for querying purposes
                    type: string
                isPermanent:
                    title: iFetchDoc.isPermanent
                    description: >-
                        True if the document is permanent (i.e. fetched from a permanent URI
                        like IPFS)
                    type: boolean
            required:
                - fetchedAt
                - fetchedAtBlock
                - db
                - isPermanent
            additionalProperties: false
            title: iFetchDoc
            description: '@category Interfaces'
            type: object
        iRefreshDoc:
            properties:
                collectionId:
                    title: iRefreshDoc.collectionId
                    description: The collection ID
                    anyOf:
                        - type: string
                        - type: number
                refreshRequestTime:
                    title: iRefreshDoc.refreshRequestTime
                    description: The time the refresh was requested (Unix timestamp in milliseconds)
                    anyOf:
                        - type: string
                        - type: number
            required:
                - collectionId
                - refreshRequestTime
            additionalProperties: false
            title: iRefreshDoc
            description: '@category Interfaces'
            type: object
        iAirdropDoc:
            properties:
                airdropped:
                    title: iAirdropDoc.airdropped
                    description: True if the airdrop has been completed
                    type: boolean
                timestamp:
                    title: iAirdropDoc.timestamp
                    description: >-
                        The timestamp of when the airdrop was completed (milliseconds since
                        epoch)
                    anyOf:
                        - type: string
                        - type: number
                hash:
                    title: iAirdropDoc.hash
                    description: The hash of the airdrop transaction
                    type: string
            required:
                - airdropped
                - timestamp
            additionalProperties: false
            title: iAirdropDoc
            description: '@category Interfaces'
            type: object
        iIPFSTotalsDoc:
            properties:
                bytesUploaded:
                    title: iIPFSTotalsDoc.bytesUploaded
                    description: The total bytes uploaded
                    anyOf:
                        - type: string
                        - type: number
            required:
                - bytesUploaded
            additionalProperties: false
            title: iIPFSTotalsDoc
            description: '@category Interfaces'
            type: object
        iComplianceDoc:
            properties:
                badges:
                    properties:
                        nsfw:
                            items: {}
                            title: iComplianceDoc.badges.nsfw
                            type: array
                        reported:
                            items: {}
                            title: iComplianceDoc.badges.reported
                            type: array
                    required:
                        - nsfw
                        - reported
                    additionalProperties: false
                    title: iComplianceDoc.badges
                    type: object
                addressLists:
                    properties:
                        nsfw:
                            items:
                                properties:
                                    listId:
                                        title: iComplianceDoc.addressLists.nsfw.[].listId
                                        type: string
                                    reason:
                                        title: iComplianceDoc.addressLists.nsfw.[].reason
                                        type: string
                                required:
                                    - listId
                                    - reason
                                additionalProperties: false
                                title: iComplianceDoc.addressLists.nsfw.[]
                                type: object
                            title: iComplianceDoc.addressLists.nsfw
                            type: array
                        reported:
                            items:
                                properties:
                                    listId:
                                        title: iComplianceDoc.addressLists.reported.[].listId
                                        type: string
                                    reason:
                                        title: iComplianceDoc.addressLists.reported.[].reason
                                        type: string
                                required:
                                    - listId
                                    - reason
                                additionalProperties: false
                                title: iComplianceDoc.addressLists.reported.[]
                                type: object
                            title: iComplianceDoc.addressLists.reported
                            type: array
                    required:
                        - nsfw
                        - reported
                    additionalProperties: false
                    title: iComplianceDoc.addressLists
                    type: object
                accounts:
                    properties:
                        nsfw:
                            items:
                                properties:
                                    cosmosAddress:
                                        title: iComplianceDoc.accounts.nsfw.[].cosmosAddress
                                        type: string
                                    reason:
                                        title: iComplianceDoc.accounts.nsfw.[].reason
                                        type: string
                                required:
                                    - cosmosAddress
                                    - reason
                                additionalProperties: false
                                title: iComplianceDoc.accounts.nsfw.[]
                                type: object
                            title: iComplianceDoc.accounts.nsfw
                            type: array
                        reported:
                            items:
                                properties:
                                    cosmosAddress:
                                        title: iComplianceDoc.accounts.reported.[].cosmosAddress
                                        type: string
                                    reason:
                                        title: iComplianceDoc.accounts.reported.[].reason
                                        type: string
                                required:
                                    - cosmosAddress
                                    - reason
                                additionalProperties: false
                                title: iComplianceDoc.accounts.reported.[]
                                type: object
                            title: iComplianceDoc.accounts.reported
                            type: array
                    required:
                        - nsfw
                        - reported
                    additionalProperties: false
                    title: iComplianceDoc.accounts
                    type: object
            required:
                - badges
                - addressLists
                - accounts
            additionalProperties: false
            title: iComplianceDoc
            description: '@category Interfaces'
            type: object
        iBlockinAuthSignatureDoc:
            properties:
                signature:
                    title: iBlockinAuthSignatureDoc.signature
                    type: string
                name:
                    title: iBlockinAuthSignatureDoc.name
                    type: string
                description:
                    title: iBlockinAuthSignatureDoc.description
                    type: string
                image:
                    title: iBlockinAuthSignatureDoc.image
                    type: string
                cosmosAddress:
                    title: iBlockinAuthSignatureDoc.cosmosAddress
                    type: string
                params:
                    title: iBlockinAuthSignatureDoc.params
                createdAt:
                    title: iBlockinAuthSignatureDoc.createdAt
                    anyOf:
                        - type: string
                        - type: number
                deletedAt:
                    title: iBlockinAuthSignatureDoc.deletedAt
                    anyOf:
                        - type: string
                        - type: number
            required:
                - signature
                - name
                - description
                - image
                - cosmosAddress
                - params
                - createdAt
            additionalProperties: false
            title: iBlockinAuthSignatureDoc
            description: '@category Interfaces'
            type: object
        iFollowDetailsDoc:
            properties:
                cosmosAddress:
                    title: iFollowDetailsDoc.cosmosAddress
                    description: The Cosmos address of the user
                    type: string
                followingCount:
                    title: iFollowDetailsDoc.followingCount
                    description: The number of users that the user is following
                    anyOf:
                        - type: string
                        - type: number
                followersCount:
                    title: iFollowDetailsDoc.followersCount
                    description: The number of users that are following the user
                    anyOf:
                        - type: string
                        - type: number
                followers:
                    items:
                        title: iFollowDetailsDoc.followers.[]
                        type: string
                    title: iFollowDetailsDoc.followers
                    description: The followers of the user
                    type: array
                following:
                    items:
                        title: iFollowDetailsDoc.following.[]
                        type: string
                    title: iFollowDetailsDoc.following
                    description: The following of the user
                    type: array
                followingCollectionId:
                    title: iFollowDetailsDoc.followingCollectionId
                    description: The collection ID of the following collection
                    anyOf:
                        - type: string
                        - type: number
            required:
                - cosmosAddress
                - followingCount
                - followersCount
                - followers
                - following
                - followingCollectionId
            additionalProperties: false
            title: iFollowDetailsDoc
            description: '@category Interfaces'
            type: object
        iProtocolDoc:
            additionalProperties: false
            title: iProtocolDoc
            description: '@category Interfaces'
            type: object
        iUserProtocolCollectionsDoc:
            properties:
                protocols:
                    additionalProperties:
                        anyOf:
                            - type: string
                            - type: number
                    title: iUserProtocolCollectionsDoc.protocols
                    type: object
            required:
                - protocols
            additionalProperties: false
            title: iUserProtocolCollectionsDoc
            description: '@category Interfaces'
            type: object
        iUpdateHistory:
            properties:
                txHash:
                    title: iUpdateHistory.txHash
                    type: string
                block:
                    title: iUpdateHistory.block
                    anyOf:
                        - type: string
                        - type: number
                blockTimestamp:
                    title: iUpdateHistory.blockTimestamp
                    anyOf:
                        - type: string
                        - type: number
            required:
                - txHash
                - block
                - blockTimestamp
            additionalProperties: false
            title: iUpdateHistory
            description: '@category Interfaces'
            type: object
        ErrorDoc:
            properties:
                _docId:
                    title: ErrorDoc._docId
                    type: string
                _id:
                    title: ErrorDoc._id
                    type: string
                error:
                    title: ErrorDoc.error
                    type: string
                function:
                    title: ErrorDoc.function
                    type: string
            required:
                - _docId
                - error
                - function
            additionalProperties: false
            title: ErrorDoc
            description: '@category Indexer'
            type: object
        Proposal:
            properties:
                proposal_id:
                    title: Proposal.proposal_id
                    type: string
                content:
                    properties:
                        "'@type'":
                            title: Proposal.content.'@type'
                            type: string
                        title:
                            title: Proposal.content.title
                            type: string
                        description:
                            title: Proposal.content.description
                            type: string
                    required:
                        - "'@type'"
                        - title
                        - description
                    additionalProperties: false
                    title: Proposal.content
                    type: object
                status:
                    title: Proposal.status
                    type: string
                final_tally_result:
                    properties:
                        'yes':
                            title: Proposal.final_tally_result.yes
                            type: string
                        abstain:
                            title: Proposal.final_tally_result.abstain
                            type: string
                        'no':
                            title: Proposal.final_tally_result.no
                            type: string
                        no_with_veto:
                            title: Proposal.final_tally_result.no_with_veto
                            type: string
                    required:
                        - 'yes'
                        - abstain
                        - 'no'
                        - no_with_veto
                    additionalProperties: false
                    title: Proposal.final_tally_result
                    type: object
                submit_time:
                    title: Proposal.submit_time
                    type: string
                deposit_end_time:
                    title: Proposal.deposit_end_time
                    type: string
                total_deposit:
                    items: {}
                    title: Proposal.total_deposit
                    type: array
                voting_start_time:
                    title: Proposal.voting_start_time
                    type: string
                voting_end_time:
                    title: Proposal.voting_end_time
                    type: string
            required:
                - proposal_id
                - content
                - status
                - final_tally_result
                - submit_time
                - deposit_end_time
                - total_deposit
                - voting_start_time
                - voting_end_time
            additionalProperties: false
            title: Proposal
            type: object
        ProposalsResponse:
            properties:
                proposals:
                    items:
                        $ref: '#/components/schemas/Proposal'
                        title: ProposalsResponse.proposals.[]
                    title: ProposalsResponse.proposals
                    type: array
                pagination:
                    properties:
                        next_key:
                            title: ProposalsResponse.pagination.next_key
                            type: string
                        total:
                            title: ProposalsResponse.pagination.total
                            type: number
                    required:
                        - next_key
                        - total
                    additionalProperties: false
                    title: ProposalsResponse.pagination
                    type: object
            required:
                - proposals
                - pagination
            additionalProperties: false
            title: ProposalsResponse
            type: object
        TallyResponse:
            properties:
                tally:
                    properties:
                        'yes':
                            title: TallyResponse.tally.yes
                            type: string
                        abstain:
                            title: TallyResponse.tally.abstain
                            type: string
                        'no':
                            title: TallyResponse.tally.no
                            type: string
                        no_with_veto:
                            title: TallyResponse.tally.no_with_veto
                            type: string
                    required:
                        - 'yes'
                        - abstain
                        - 'no'
                        - no_with_veto
                    additionalProperties: false
                    title: TallyResponse.tally
                    type: object
            required:
                - tally
            additionalProperties: false
            title: TallyResponse
            type: object
        iUserOutgoingApprovalWithDetails:
            properties:
                toList:
                    title: iUserOutgoingApprovalWithDetails.toList
                initiatedByList:
                    title: iUserOutgoingApprovalWithDetails.initiatedByList
            required:
                - toList
                - initiatedByList
            additionalProperties: false
            title: iUserOutgoingApprovalWithDetails
            description: '@category Approvals / Transferability'
            type: object
        LeavesDetails:
            properties:
                leaves:
                    items:
                        title: LeavesDetails.leaves.[]
                        type: string
                    title: LeavesDetails.leaves
                    type: array
                isHashed:
                    title: LeavesDetails.isHashed
                    type: boolean
                preimages:
                    items:
                        title: LeavesDetails.preimages.[]
                        type: string
                    title: LeavesDetails.preimages
                    type: array
                seedCode:
                    title: LeavesDetails.seedCode
                    type: string
            required:
                - leaves
                - isHashed
            additionalProperties: false
            title: LeavesDetails
            description: >-
                LeavesDetails represents details about the leaves of a claims tree.

                This is used as helpers for storing leaves and for UI purposes.


                This is used to check if an entered claim value is valid. If the leaves
                are hashed, then the value entered by the user will be hashed before
                being checked against the provided leaf values.

                If the leaves are not hashed, then the value entered by the user will be
                checked directly against the provided leaf values.


                IMPORTANT: The leaf values here are to be publicly stored on IPFS, so
                they should not contain any sensitive information (i.e. codes,
                passwords, etc.)

                Only use this with the non-hashed option when the values do not contain
                any sensitive information (i.e. a public whitelist of addresses).

                @category Approvals / Transferability
            type: object
        iChallengeDetails:
            properties:
                leavesDetails:
                    $ref: '#/components/schemas/LeavesDetails'
                    title: iChallengeDetails.leavesDetails
                    description: The leaves of the Merkle tree with accompanying details
                tree:
                    title: iChallengeDetails.tree
                    description: The Merkle tree
                treeOptions:
                    title: iChallengeDetails.treeOptions
                    description: The Merkle tree options for how to build it
                numLeaves:
                    title: iChallengeDetails.numLeaves
                    description: >-
                        The number of leaves in the Merkle tree. This takes priority over
                        leaves.length if defined (used for buffer time between leaf
                        generation and leaf length select)
                    anyOf:
                        - type: string
                        - type: number
                currCode:
                    title: iChallengeDetails.currCode
                    description: >-
                        The current code being used for the challenge. Used behind the
                        scenes
                    anyOf:
                        - type: string
                        - type: number
            required:
                - leavesDetails
            additionalProperties: false
            title: iChallengeDetails
            description: '@category Interfaces'
            type: object
        iApprovalInfoDetails:
            properties:
                name:
                    title: iApprovalInfoDetails.name
                    description: The name of the claim
                    type: string
                description:
                    title: iApprovalInfoDetails.description
                    description: >-
                        The description of the claim. This describes how to earn and claim
                        the badge.
                    type: string
                challengeDetails:
                    $ref: '#/components/schemas/iChallengeDetails'
                    title: iApprovalInfoDetails.challengeDetails
                    description: The challenge details of the claim / approval
                offChainClaims:
                    items:
                        properties:
                            plugins:
                                items: {}
                                title: iApprovalInfoDetails.offChainClaims.[].plugins
                                description: The plugins of the claim / approval
                                type: array
                            claimId:
                                title: iApprovalInfoDetails.offChainClaims.[].claimId
                                type: string
                            manualDistribution:
                                title: iApprovalInfoDetails.offChainClaims.[].manualDistribution
                                type: boolean
                        required:
                            - plugins
                            - claimId
                        additionalProperties: false
                        title: iApprovalInfoDetails.offChainClaims.[]
                        type: object
                    title: iApprovalInfoDetails.offChainClaims
                    type: array
            required:
                - name
                - description
            additionalProperties: false
            title: iApprovalInfoDetails
            description: '@category Interfaces'
            type: object
        iMerkleChallengeWithDetails:
            properties:
                details:
                    $ref: '#/components/schemas/iApprovalInfoDetails'
                    title: iMerkleChallengeWithDetails.details
            additionalProperties: false
            title: iMerkleChallengeWithDetails
            description: '@category Interfaces'
            type: object
        iApprovalCriteriaWithDetails:
            properties:
                merkleChallenge:
                    $ref: '#/components/schemas/iMerkleChallengeWithDetails'
                    title: iApprovalCriteriaWithDetails.merkleChallenge
            additionalProperties: false
            title: iApprovalCriteriaWithDetails
            description: '@category Interfaces'
            type: object
        iCollectionApprovalWithDetails:
            properties:
                approvalCriteria:
                    $ref: '#/components/schemas/iApprovalCriteriaWithDetails'
                    title: iCollectionApprovalWithDetails.approvalCriteria
                details:
                    $ref: '#/components/schemas/iApprovalInfoDetails'
                    title: iCollectionApprovalWithDetails.details
                toList:
                    title: iCollectionApprovalWithDetails.toList
                fromList:
                    title: iCollectionApprovalWithDetails.fromList
                initiatedByList:
                    title: iCollectionApprovalWithDetails.initiatedByList
            required:
                - toList
                - fromList
                - initiatedByList
            additionalProperties: false
            title: iCollectionApprovalWithDetails
            description: '@category Interfaces'
            type: object
        CounterParty:
            properties:
                port_id:
                    title: CounterParty.port_id
                    type: string
                channel_id:
                    title: CounterParty.channel_id
                    type: string
            required:
                - port_id
                - channel_id
            additionalProperties: false
            title: CounterParty
            type: object
        Channel:
            properties:
                state:
                    title: Channel.state
                    type: string
                ordering:
                    title: Channel.ordering
                    type: string
                counterparty:
                    $ref: '#/components/schemas/CounterParty'
                    title: Channel.counterparty
                connection_hops:
                    items:
                        title: Channel.connection_hops.[]
                        type: string
                    title: Channel.connection_hops
                    type: array
                version:
                    title: Channel.version
                    type: string
                port_id:
                    title: Channel.port_id
                    type: string
                channel_id:
                    title: Channel.channel_id
                    type: string
            required:
                - state
                - ordering
                - counterparty
                - connection_hops
                - version
                - port_id
                - channel_id
            additionalProperties: false
            title: Channel
            type: object
        ChannelsResponse:
            properties:
                channels:
                    items:
                        $ref: '#/components/schemas/Channel'
                        title: ChannelsResponse.channels.[]
                    title: ChannelsResponse.channels
                    type: array
                pagination:
                    properties:
                        next_key:
                            title: ChannelsResponse.pagination.next_key
                            type: string
                        total:
                            title: ChannelsResponse.pagination.total
                            type: string
                    required:
                        - total
                    additionalProperties: false
                    title: ChannelsResponse.pagination
                    type: object
                height:
                    properties:
                        revision_number:
                            title: ChannelsResponse.height.revision_number
                            type: string
                        revision_height:
                            title: ChannelsResponse.height.revision_height
                            type: string
                    required:
                        - revision_number
                        - revision_height
                    additionalProperties: false
                    title: ChannelsResponse.height
                    type: object
            required:
                - channels
                - pagination
                - height
            additionalProperties: false
            title: ChannelsResponse
            type: object
        Reward:
            properties:
                validator_address:
                    title: Reward.validator_address
                    type: string
                reward:
                    items: {}
                    title: Reward.reward
                    type: array
            required:
                - validator_address
                - reward
            additionalProperties: false
            title: Reward
            type: object
        DistributionRewardsResponse:
            properties:
                rewards:
                    items:
                        $ref: '#/components/schemas/Reward'
                        title: DistributionRewardsResponse.rewards.[]
                    title: DistributionRewardsResponse.rewards
                    type: array
                total:
                    items: {}
                    title: DistributionRewardsResponse.total
                    type: array
            required:
                - rewards
                - total
            additionalProperties: false
            title: DistributionRewardsResponse
            type: object
        Validator:
            properties:
                commission:
                    properties:
                        commission_rates:
                            properties:
                                max_change_rate:
                                    title: Validator.commission.commission_rates.max_change_rate
                                    type: string
                                max_rate:
                                    title: Validator.commission.commission_rates.max_rate
                                    type: string
                                rate:
                                    title: Validator.commission.commission_rates.rate
                                    type: string
                            required:
                                - max_change_rate
                                - max_rate
                                - rate
                            additionalProperties: false
                            title: Validator.commission.commission_rates
                            type: object
                        update_time:
                            title: Validator.commission.update_time
                            type: string
                    required:
                        - commission_rates
                        - update_time
                    additionalProperties: false
                    title: Validator.commission
                    type: object
                consensus_pubkey:
                    properties:
                        "'@type'":
                            title: Validator.consensus_pubkey.'@type'
                            type: string
                        key:
                            title: Validator.consensus_pubkey.key
                            type: string
                    required:
                        - "'@type'"
                        - key
                    additionalProperties: false
                    title: Validator.consensus_pubkey
                    type: object
                delegator_shares:
                    title: Validator.delegator_shares
                    type: string
                description:
                    properties:
                        details:
                            title: Validator.description.details
                            type: string
                        identity:
                            title: Validator.description.identity
                            type: string
                        moniker:
                            title: Validator.description.moniker
                            type: string
                        security_contact:
                            title: Validator.description.security_contact
                            type: string
                        website:
                            title: Validator.description.website
                            type: string
                    required:
                        - details
                        - identity
                        - moniker
                        - security_contact
                        - website
                    additionalProperties: false
                    title: Validator.description
                    type: object
                jailed:
                    title: Validator.jailed
                    type: boolean
                min_self_delegation:
                    title: Validator.min_self_delegation
                    type: string
                operator_address:
                    title: Validator.operator_address
                    type: string
                status:
                    title: Validator.status
                    type: string
                tokens:
                    title: Validator.tokens
                    type: string
                unbonding_height:
                    title: Validator.unbonding_height
                    type: string
                unbonding_time:
                    title: Validator.unbonding_time
                    type: string
            required:
                - commission
                - consensus_pubkey
                - delegator_shares
                - description
                - jailed
                - min_self_delegation
                - operator_address
                - status
                - tokens
                - unbonding_height
                - unbonding_time
            additionalProperties: false
            title: Validator
            type: object
        GetValidatorsResponse:
            properties:
                validators:
                    items:
                        $ref: '#/components/schemas/Validator'
                        title: GetValidatorsResponse.validators.[]
                    title: GetValidatorsResponse.validators
                    type: array
                pagination:
                    properties:
                        next_key:
                            title: GetValidatorsResponse.pagination.next_key
                            type: string
                        total:
                            title: GetValidatorsResponse.pagination.total
                            type: number
                    required:
                        - next_key
                        - total
                    additionalProperties: false
                    title: GetValidatorsResponse.pagination
                    type: object
            required:
                - validators
                - pagination
            additionalProperties: false
            title: GetValidatorsResponse
            type: object
        DelegationResponse:
            properties:
                balance:
                    title: DelegationResponse.balance
                delegation:
                    properties:
                        delegator_address:
                            title: DelegationResponse.delegation.delegator_address
                            type: string
                        shares:
                            title: DelegationResponse.delegation.shares
                            type: string
                        validator_address:
                            title: DelegationResponse.delegation.validator_address
                            type: string
                    required:
                        - delegator_address
                        - shares
                        - validator_address
                    additionalProperties: false
                    title: DelegationResponse.delegation
                    type: object
            required:
                - balance
                - delegation
            additionalProperties: false
            title: DelegationResponse
            type: object
        GetDelegationsResponse:
            properties:
                delegation_responses:
                    items:
                        $ref: '#/components/schemas/DelegationResponse'
                        title: GetDelegationsResponse.delegation_responses.[]
                    title: GetDelegationsResponse.delegation_responses
                    type: array
                pagination:
                    properties:
                        next_key:
                            title: GetDelegationsResponse.pagination.next_key
                            type: string
                        total:
                            title: GetDelegationsResponse.pagination.total
                            type: number
                    required:
                        - next_key
                        - total
                    additionalProperties: false
                    title: GetDelegationsResponse.pagination
                    type: object
            required:
                - delegation_responses
                - pagination
            additionalProperties: false
            title: GetDelegationsResponse
            type: object
        iBitBadgesUserInfo:
            properties:
                resolvedName:
                    title: iBitBadgesUserInfo.resolvedName
                    description: The resolved name of the account (e.g. ENS name).
                    type: string
                avatar:
                    title: iBitBadgesUserInfo.avatar
                    description: The avatar of the account.
                    type: string
                solAddress:
                    title: iBitBadgesUserInfo.solAddress
                    description: The Solana address of the account.
                    type: string
                chain:
                    title: iBitBadgesUserInfo.chain
                    description: The chain of the account.
                airdropped:
                    title: iBitBadgesUserInfo.airdropped
                    description: Indicates whether the account has claimed their airdrop.
                    type: boolean
                collected:
                    items: {}
                    title: iBitBadgesUserInfo.collected
                    description: >-
                        A list of badges that the account has collected. Paginated and
                        fetched as needed. To be used in conjunction with views.
                    type: array
                activity:
                    items: {}
                    title: iBitBadgesUserInfo.activity
                    description: >-
                        A list of transfer activity items for the account. Paginated and
                        fetched as needed. To be used in conjunction with views.
                    type: array
                listsActivity:
                    items: {}
                    title: iBitBadgesUserInfo.listsActivity
                    description: >-
                        A list of list activity items for the account. Paginated and fetched
                        as needed. To be used in conjunction with views.
                    type: array
                reviews:
                    items: {}
                    title: iBitBadgesUserInfo.reviews
                    description: >-
                        A list of review activity items for the account. Paginated and
                        fetched as needed. To be used in conjunction with views.
                    type: array
                merkleChallenges:
                    items: {}
                    title: iBitBadgesUserInfo.merkleChallenges
                    description: >-
                        A list of merkle challenge activity items for the account. Paginated
                        and fetched as needed. To be used in conjunction with views.
                    type: array
                approvalTrackers:
                    items: {}
                    title: iBitBadgesUserInfo.approvalTrackers
                    description: >-
                        A list of approvals tracker activity items for the account.
                        Paginated and fetched as needed. To be used in conjunction with
                        views.
                    type: array
                addressLists:
                    items: {}
                    title: iBitBadgesUserInfo.addressLists
                    description: >-
                        A list of address lists for the account. Paginated and fetched as
                        needed. To be used in conjunction with views.
                    type: array
                claimAlerts:
                    items: {}
                    title: iBitBadgesUserInfo.claimAlerts
                    description: >-
                        A list of claim alerts for the account. Paginated and fetched as
                        needed. To be used in conjunction with views.
                    type: array
                authCodes:
                    items: {}
                    title: iBitBadgesUserInfo.authCodes
                    description: >-
                        A list of auth codes for the account. Paginated and fetched as
                        needed. To be used in conjunction with views.
                    type: array
                address:
                    title: iBitBadgesUserInfo.address
                    description: The native address of the account
                    type: string
                nsfw:
                    additionalProperties:
                        type: string
                    title: iBitBadgesUserInfo.nsfw
                    description: Indicates whether the account is NSFW.
                    type: object
                reported:
                    additionalProperties:
                        type: string
                    title: iBitBadgesUserInfo.reported
                    description: Indicates whether the account has been reported.
                    type: object
                views:
                    additionalProperties:
                        properties:
                            ids:
                                items:
                                    title: ids.[]
                                    type: string
                                title: ids
                                type: array
                            type:
                                title: type
                                type: string
                            pagination:
                                title: pagination
                        required:
                            - ids
                            - type
                            - pagination
                        additionalProperties: false
                        type: object
                    title: iBitBadgesUserInfo.views
                    description: >-
                        The views for this collection and their pagination Doc. Views will
                        only include the doc _ids. Use the pagination to fetch more. To be
                        used in conjunction with activity, announcements, reviews, owners,
                        merkleChallenges, and approvalTrackers. For example, if you want to
                        fetch the activity for a view, you would use the view's pagination
                        to fetch the doc _ids, then use the corresponding activity array to
                        find the matching docs.
                    type: object
                alias:
                    properties:
                        collectionId:
                            title: iBitBadgesUserInfo.alias.collectionId
                            anyOf:
                                - type: string
                                - type: number
                        listId:
                            title: iBitBadgesUserInfo.alias.listId
                            type: string
                    additionalProperties: false
                    title: iBitBadgesUserInfo.alias
                    description: The alias for the account.
                    type: object
            required:
                - solAddress
                - chain
                - collected
                - activity
                - listsActivity
                - reviews
                - merkleChallenges
                - approvalTrackers
                - addressLists
                - claimAlerts
                - authCodes
                - address
                - views
            additionalProperties: false
            title: iBitBadgesUserInfo
            description: '@category Interfaces'
            type: object
        AccountMap:
            additionalProperties:
                anyOf: []
            title: AccountMap
            description: |-
                AccountMap is used to store the user information by address.
                @category Indexer
            type: object
        AccountViewKey:
            enum:
                - createdLists
                - privateLists
                - authCodes
                - transferActivity
                - reviews
                - badgesCollected
                - claimAlerts
                - allLists
                - whitelists
                - blacklists
                - createdBadges
                - managingBadges
                - listsActivity
            title: AccountViewKey
            description: |-
                The supported view keys for fetching account details.
                @category API Requests / Responses
            type: string
        AccountFetchDetails:
            properties:
                address:
                    title: AccountFetchDetails.address
                    type: string
                username:
                    title: AccountFetchDetails.username
                    type: string
                fetchSequence:
                    title: AccountFetchDetails.fetchSequence
                    description: If true, we will fetch the sequence from the blockchain.
                    type: boolean
                fetchBalance:
                    title: AccountFetchDetails.fetchBalance
                    description: If true, we will fetch the $BADGE balance from the blockchain.
                    type: boolean
                noExternalCalls:
                    title: AccountFetchDetails.noExternalCalls
                    description: If true, we will avoid external API calls.
                    type: boolean
                viewsToFetch:
                    items:
                        properties:
                            viewId:
                                title: AccountFetchDetails.viewsToFetch.[].viewId
                                description: >-
                                    Unique view ID. Used for pagination. All fetches w/ same ID
                                    should be made with same criteria.
                                type: string
                            viewType:
                                $ref: '#/components/schemas/AccountViewKey'
                                title: AccountFetchDetails.viewsToFetch.[].viewType
                                description: The base view type to fetch.
                            specificCollections:
                                items: {}
                                title: AccountFetchDetails.viewsToFetch.[].specificCollections
                                description: >-
                                    If defined, we will filter the view to only include the
                                    specified collections.
                                type: array
                            specificLists:
                                items:
                                    title: AccountFetchDetails.viewsToFetch.[].specificLists.[]
                                    type: string
                                title: AccountFetchDetails.viewsToFetch.[].specificLists
                                description: >-
                                    If defined, we will filter the view to only include the
                                    specified lists.
                                type: array
                            oldestFirst:
                                title: AccountFetchDetails.viewsToFetch.[].oldestFirst
                                description: Oldest first. By default, we fetch newest
                                type: boolean
                            bookmark:
                                title: AccountFetchDetails.viewsToFetch.[].bookmark
                                description: A bookmark to pass in for pagination. "" for first request.
                                type: string
                        required:
                            - viewId
                            - viewType
                            - bookmark
                        additionalProperties: false
                        title: AccountFetchDetails.viewsToFetch.[]
                        type: object
                    title: AccountFetchDetails.viewsToFetch
                    description: An array of views to fetch
                    type: array
            additionalProperties: false
            title: AccountFetchDetails
            description: >-
                This defines the options for fetching additional account details.


                A view is a way of fetching additional details about an account, and
                these will be queryable in the response via the `views` property.


                Each view has a bookmark that is used for pagination and must be
                supplied to get the next page.


                We support the following views:

                - `transferActivity` - Fetches the latest activity for the account.

                - `latestAnnouncements` - Fetches the latest announcements for the
                account.

                - `reviews` - Fetches the latest reviews for the account.

                - `badgesCollected` - Fetches the badges collected by the account
                sequentially in random order.

                @category API Requests / Responses
            type: object
        GetAccountsBody:
            properties:
                accountsToFetch:
                    items:
                        $ref: '#/components/schemas/AccountFetchDetails'
                        title: GetAccountsBody.accountsToFetch.[]
                    title: GetAccountsBody.accountsToFetch
                    type: array
            required:
                - accountsToFetch
            additionalProperties: false
            title: GetAccountsBody
            description: '@category API Requests / Responses'
            type: object
        iGetAccountsRouteSuccessResponse:
            properties:
                accounts:
                    items:
                        $ref: '#/components/schemas/iBitBadgesUserInfo'
                        title: iGetAccountsRouteSuccessResponse.accounts.[]
                    title: iGetAccountsRouteSuccessResponse.accounts
                    type: array
            required:
                - accounts
            additionalProperties: false
            title: iGetAccountsRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        GetFollowDetailsBody:
            properties:
                cosmosAddress:
                    title: GetFollowDetailsBody.cosmosAddress
                    type: string
                followingBookmark:
                    title: GetFollowDetailsBody.followingBookmark
                    type: string
                followersBookmark:
                    title: GetFollowDetailsBody.followersBookmark
                    type: string
                protocol:
                    title: GetFollowDetailsBody.protocol
                    type: string
                activityBookmark:
                    title: GetFollowDetailsBody.activityBookmark
                    type: string
            required:
                - cosmosAddress
            additionalProperties: false
            title: GetFollowDetailsBody
            description: '@category API Requests / Responses'
            type: object
        iGetFollowDetailsRouteSuccessResponse:
            properties:
                followersPagination:
                    title: iGetFollowDetailsRouteSuccessResponse.followersPagination
                followingPagination:
                    title: iGetFollowDetailsRouteSuccessResponse.followingPagination
                activity:
                    items: {}
                    title: iGetFollowDetailsRouteSuccessResponse.activity
                    type: array
                activityPagination:
                    title: iGetFollowDetailsRouteSuccessResponse.activityPagination
            required:
                - followersPagination
                - followingPagination
                - activity
                - activityPagination
            additionalProperties: false
            title: iGetFollowDetailsRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        GetFollowDetailsRouteResponse:
            anyOf: []
            title: GetFollowDetailsRouteResponse
            description: '@category API Requests / Responses'
        iBitBadgesCollection:
            properties:
                collectionApprovals:
                    items: {}
                    title: iBitBadgesCollection.collectionApprovals
                    description: >-
                        The collection approvals for this collection, with off-chain
                        metadata populated.
                    type: array
                collectionPermissions:
                    title: iBitBadgesCollection.collectionPermissions
                    description: >-
                        The collection permissions for this collection, with off-chain
                        metadata populated.
                cachedCollectionMetadata:
                    title: iBitBadgesCollection.cachedCollectionMetadata
                    description: >-
                        The fetched collection metadata for this collection. Will only be
                        fetched if requested. It is your responsibility to join this data.
                cachedBadgeMetadata:
                    items: {}
                    title: iBitBadgesCollection.cachedBadgeMetadata
                    description: >-
                        The fetched badge metadata for this collection. Will only be fetched
                        if requested. It is your responsibility to join this data.
                    type: array
                defaultBalances:
                    title: iBitBadgesCollection.defaultBalances
                    description: >-
                        The default balances for users upon genesis, with off-chain metadata
                        populated.
                activity:
                    items: {}
                    title: iBitBadgesCollection.activity
                    description: >-
                        The fetched activity for this collection. Returned collections will
                        only fetch the current page. Use the pagination to fetch more. To be
                        used in conjunction with views.
                    type: array
                reviews:
                    items: {}
                    title: iBitBadgesCollection.reviews
                    description: >-
                        The fetched reviews for this collection. Returned collections will
                        only fetch the current page. Use the pagination to fetch more. To be
                        used in conjunction with views.
                    type: array
                owners:
                    items: {}
                    title: iBitBadgesCollection.owners
                    description: >-
                        The fetched owners of this collection. Returned collections will
                        only fetch the current page. Use the pagination to fetch more. To be
                        used in conjunction with views.
                    type: array
                merkleChallenges:
                    items: {}
                    title: iBitBadgesCollection.merkleChallenges
                    description: >-
                        The fetched merkle challenges for this collection. Returned
                        collections will only fetch the current page. Use the pagination to
                        fetch more. To be used in conjunction with views.
                    type: array
                approvalTrackers:
                    items: {}
                    title: iBitBadgesCollection.approvalTrackers
                    description: >-
                        The fetched approval trackers for this collection. Returned
                        collections will only fetch the current page. Use the pagination to
                        fetch more. To be used in conjunction with views.
                    type: array
                nsfw:
                    properties:
                        badgeIds:
                            items: {}
                            title: iBitBadgesCollection.nsfw.badgeIds
                            type: array
                        reason:
                            title: iBitBadgesCollection.nsfw.reason
                            type: string
                    required:
                        - badgeIds
                        - reason
                    additionalProperties: false
                    title: iBitBadgesCollection.nsfw
                    description: The badge IDs in this collection that are marked as NSFW.
                    type: object
                reported:
                    properties:
                        badgeIds:
                            items: {}
                            title: iBitBadgesCollection.reported.badgeIds
                            type: array
                        reason:
                            title: iBitBadgesCollection.reported.reason
                            type: string
                    required:
                        - badgeIds
                        - reason
                    additionalProperties: false
                    title: iBitBadgesCollection.reported
                    description: The badge IDs in this collection that have been reported.
                    type: object
                views:
                    additionalProperties:
                        properties:
                            ids:
                                items:
                                    title: ids.[]
                                    type: string
                                title: ids
                                type: array
                            type:
                                title: type
                                type: string
                            pagination:
                                title: pagination
                        required:
                            - ids
                            - type
                            - pagination
                        additionalProperties: false
                        type: object
                    title: iBitBadgesCollection.views
                    description: >-
                        The views for this collection and their pagination Doc. Views will
                        only include the doc _ids. Use the pagination to fetch more. To be
                        used in conjunction with activity, announcements, reviews, owners,
                        merkleChallenges, and approvalTrackers. For example, if you want to
                        fetch the activity for a view, you would use the view's pagination
                        to fetch the doc _ids, then use the corresponding activity array to
                        find the matching docs.
                    type: object
                offChainClaims:
                    items:
                        properties:
                            claimId:
                                title: iBitBadgesCollection.offChainClaims.[].claimId
                                type: string
                            plugins:
                                items: {}
                                title: iBitBadgesCollection.offChainClaims.[].plugins
                                type: array
                            balancesToSet:
                                title: iBitBadgesCollection.offChainClaims.[].balancesToSet
                            manualDistribution:
                                title: iBitBadgesCollection.offChainClaims.[].manualDistribution
                                type: boolean
                        required:
                            - claimId
                            - plugins
                            - balancesToSet
                        additionalProperties: false
                        title: iBitBadgesCollection.offChainClaims.[]
                        type: object
                    title: iBitBadgesCollection.offChainClaims
                    description: >-
                        Details about any off-chain claims for this collection. Only
                        applicable when outsourced to BitBadges.
                    type: array
            required:
                - collectionApprovals
                - collectionPermissions
                - cachedBadgeMetadata
                - defaultBalances
                - activity
                - reviews
                - owners
                - merkleChallenges
                - approvalTrackers
                - views
                - offChainClaims
            additionalProperties: false
            title: iBitBadgesCollection
            description: '@category Interfaces'
            type: object
        CollectionMap:
            additionalProperties:
                anyOf: []
            title: CollectionMap
            description: |-
                Used by the frontend for dynamically fetching data from the DB as needed
                @category Indexer
            type: object
        JSONObject:
            additionalProperties: {}
            title: JSONObject
            type: object
        FlattenPayloadResponse:
            properties:
                payload:
                    $ref: '#/components/schemas/JSONObject'
                    title: FlattenPayloadResponse.payload
                numMessages:
                    title: FlattenPayloadResponse.numMessages
                    type: number
            required:
                - payload
                - numMessages
            additionalProperties: false
            title: FlattenPayloadResponse
            type: object
        BalancesResponse:
            properties:
                balances:
                    items: {}
                    title: BalancesResponse.balances
                    type: array
                pagination:
                    properties:
                        next_key:
                            title: BalancesResponse.pagination.next_key
                            type: string
                        total:
                            title: BalancesResponse.pagination.total
                            type: number
                    required:
                        - next_key
                        - total
                    additionalProperties: false
                    title: BalancesResponse.pagination
                    type: object
            required:
                - balances
                - pagination
            additionalProperties: false
            title: BalancesResponse
            type: object
        iBadgeMetadataDetails:
            properties:
                metadataId:
                    title: iBadgeMetadataDetails.metadataId
                    description: >-
                        The metadata ID for the fetched URI. Metadata IDs map an ID to each
                        unique URI. See BitBadges Docs for more information.
                    anyOf:
                        - type: string
                        - type: number
                badgeIds:
                    items: {}
                    title: iBadgeMetadataDetails.badgeIds
                    description: The badge IDs that correspond to the metadata
                    type: array
                metadata:
                    title: iBadgeMetadataDetails.metadata
                    description: The metadata fetched by the URI
                uri:
                    title: iBadgeMetadataDetails.uri
                    description: The URI that the metadata was fetched from
                    type: string
                customData:
                    title: iBadgeMetadataDetails.customData
                    description: Custom data
                    type: string
                toUpdate:
                    title: iBadgeMetadataDetails.toUpdate
                    description: >-
                        Flag to denote if the metadata is new and should be updated. Used
                        internally.
                    type: boolean
            required:
                - badgeIds
                - metadata
            additionalProperties: false
            title: iBadgeMetadataDetails
            description: >-
                To keep track of metadata for badges and load it dynamically, we store
                it in an array: BadgeMetadataDetails[].


                The values are { metadata, uri, badgeIds, metadataId } where this object
                represents the metadata fetched by a uri or metadataId

                which correspond to the badgeIds.


                Keeping track of metadata in this way allows us to load metadata
                dynamically and only when needed.

                However, it does get confusing when we need to update this array. This
                file contains the logic

                for updating the metadata in an efficient way.


                updateBadgeMetadata - updates the metadata array to include the given
                metadata and badgeIds fetched from the given uri. Replaces existing
                metadata for badgeIds, if any.

                getMetadataForBadgeId - returns just the metadata for a given badgeId

                getMetadataddDetailsForBadgeId - returns the { metadata, uri, badgeIds,
                metadata } object for a given badgeId


                setMetadataPropertyForAll - sets a specific (key, value) pair for all
                metadata entries in the array
            type: object
        UniversalPermission:
            properties:
                badgeIds:
                    title: UniversalPermission.badgeIds
                timelineTimes:
                    title: UniversalPermission.timelineTimes
                transferTimes:
                    title: UniversalPermission.transferTimes
                ownershipTimes:
                    title: UniversalPermission.ownershipTimes
                toList:
                    title: UniversalPermission.toList
                fromList:
                    title: UniversalPermission.fromList
                initiatedByList:
                    title: UniversalPermission.initiatedByList
                approvalIdList:
                    title: UniversalPermission.approvalIdList
                amountTrackerIdList:
                    title: UniversalPermission.amountTrackerIdList
                challengeTrackerIdList:
                    title: UniversalPermission.challengeTrackerIdList
                permanentlyPermittedTimes:
                    title: UniversalPermission.permanentlyPermittedTimes
                permanentlyForbiddenTimes:
                    title: UniversalPermission.permanentlyForbiddenTimes
                usesBadgeIds:
                    title: UniversalPermission.usesBadgeIds
                    type: boolean
                usesTimelineTimes:
                    title: UniversalPermission.usesTimelineTimes
                    type: boolean
                usesTransferTimes:
                    title: UniversalPermission.usesTransferTimes
                    type: boolean
                usesToList:
                    title: UniversalPermission.usesToList
                    type: boolean
                usesFromList:
                    title: UniversalPermission.usesFromList
                    type: boolean
                usesInitiatedByList:
                    title: UniversalPermission.usesInitiatedByList
                    type: boolean
                usesOwnershipTimes:
                    title: UniversalPermission.usesOwnershipTimes
                    type: boolean
                usesApprovalIdList:
                    title: UniversalPermission.usesApprovalIdList
                    type: boolean
                usesAmountTrackerIdList:
                    title: UniversalPermission.usesAmountTrackerIdList
                    type: boolean
                usesChallengeTrackerIdList:
                    title: UniversalPermission.usesChallengeTrackerIdList
                    type: boolean
                arbitraryValue:
                    title: UniversalPermission.arbitraryValue
            required:
                - badgeIds
                - timelineTimes
                - transferTimes
                - ownershipTimes
                - toList
                - fromList
                - initiatedByList
                - approvalIdList
                - amountTrackerIdList
                - challengeTrackerIdList
                - permanentlyPermittedTimes
                - permanentlyForbiddenTimes
                - usesBadgeIds
                - usesTimelineTimes
                - usesTransferTimes
                - usesToList
                - usesFromList
                - usesInitiatedByList
                - usesOwnershipTimes
                - usesApprovalIdList
                - usesAmountTrackerIdList
                - usesChallengeTrackerIdList
                - arbitraryValue
            additionalProperties: false
            title: UniversalPermission
            type: object
        UniversalPermissionDetails:
            properties:
                badgeId:
                    title: UniversalPermissionDetails.badgeId
                timelineTime:
                    title: UniversalPermissionDetails.timelineTime
                transferTime:
                    title: UniversalPermissionDetails.transferTime
                ownershipTime:
                    title: UniversalPermissionDetails.ownershipTime
                toList:
                    title: UniversalPermissionDetails.toList
                fromList:
                    title: UniversalPermissionDetails.fromList
                initiatedByList:
                    title: UniversalPermissionDetails.initiatedByList
                approvalIdList:
                    title: UniversalPermissionDetails.approvalIdList
                amountTrackerIdList:
                    title: UniversalPermissionDetails.amountTrackerIdList
                challengeTrackerIdList:
                    title: UniversalPermissionDetails.challengeTrackerIdList
                permanentlyPermittedTimes:
                    title: UniversalPermissionDetails.permanentlyPermittedTimes
                permanentlyForbiddenTimes:
                    title: UniversalPermissionDetails.permanentlyForbiddenTimes
                arbitraryValue:
                    title: UniversalPermissionDetails.arbitraryValue
            required:
                - badgeId
                - timelineTime
                - transferTime
                - ownershipTime
                - toList
                - fromList
                - initiatedByList
                - approvalIdList
                - amountTrackerIdList
                - challengeTrackerIdList
                - permanentlyPermittedTimes
                - permanentlyForbiddenTimes
                - arbitraryValue
            additionalProperties: false
            title: UniversalPermissionDetails
            type: object
        Overlap:
            properties:
                overlap:
                    $ref: '#/components/schemas/UniversalPermissionDetails'
                    title: Overlap.overlap
                firstDetails:
                    $ref: '#/components/schemas/UniversalPermissionDetails'
                    title: Overlap.firstDetails
                secondDetails:
                    $ref: '#/components/schemas/UniversalPermissionDetails'
                    title: Overlap.secondDetails
            required:
                - overlap
                - firstDetails
                - secondDetails
            additionalProperties: false
            title: Overlap
            type: object
        UsedFlags:
            properties:
                usesBadgeIds:
                    title: UsedFlags.usesBadgeIds
                    type: boolean
                usesTimelineTimes:
                    title: UsedFlags.usesTimelineTimes
                    type: boolean
                usesTransferTimes:
                    title: UsedFlags.usesTransferTimes
                    type: boolean
                usesToList:
                    title: UsedFlags.usesToList
                    type: boolean
                usesFromList:
                    title: UsedFlags.usesFromList
                    type: boolean
                usesInitiatedByList:
                    title: UsedFlags.usesInitiatedByList
                    type: boolean
                usesOwnershipTimes:
                    title: UsedFlags.usesOwnershipTimes
                    type: boolean
                usesApprovalIdList:
                    title: UsedFlags.usesApprovalIdList
                    type: boolean
                usesAmountTrackerIdList:
                    title: UsedFlags.usesAmountTrackerIdList
                    type: boolean
                usesChallengeTrackerIdList:
                    title: UsedFlags.usesChallengeTrackerIdList
                    type: boolean
            required:
                - usesBadgeIds
                - usesTimelineTimes
                - usesTransferTimes
                - usesToList
                - usesFromList
                - usesInitiatedByList
                - usesOwnershipTimes
                - usesApprovalIdList
                - usesAmountTrackerIdList
                - usesChallengeTrackerIdList
            additionalProperties: false
            title: UsedFlags
            type: object
        MergedUniversalPermissionDetails:
            properties:
                badgeIds:
                    title: MergedUniversalPermissionDetails.badgeIds
                timelineTimes:
                    title: MergedUniversalPermissionDetails.timelineTimes
                transferTimes:
                    title: MergedUniversalPermissionDetails.transferTimes
                ownershipTimes:
                    title: MergedUniversalPermissionDetails.ownershipTimes
                toList:
                    title: MergedUniversalPermissionDetails.toList
                fromList:
                    title: MergedUniversalPermissionDetails.fromList
                initiatedByList:
                    title: MergedUniversalPermissionDetails.initiatedByList
                approvalIdList:
                    title: MergedUniversalPermissionDetails.approvalIdList
                amountTrackerIdList:
                    title: MergedUniversalPermissionDetails.amountTrackerIdList
                challengeTrackerIdList:
                    title: MergedUniversalPermissionDetails.challengeTrackerIdList
                permanentlyPermittedTimes:
                    title: MergedUniversalPermissionDetails.permanentlyPermittedTimes
                permanentlyForbiddenTimes:
                    title: MergedUniversalPermissionDetails.permanentlyForbiddenTimes
                arbitraryValue:
                    title: MergedUniversalPermissionDetails.arbitraryValue
            required:
                - badgeIds
                - timelineTimes
                - transferTimes
                - ownershipTimes
                - toList
                - fromList
                - initiatedByList
                - approvalIdList
                - amountTrackerIdList
                - challengeTrackerIdList
                - permanentlyPermittedTimes
                - permanentlyForbiddenTimes
                - arbitraryValue
            additionalProperties: false
            title: MergedUniversalPermissionDetails
            type: object
        TxToSend:
            properties:
                message:
                    properties:
                        toBinary:
                            title: TxToSend.message.toBinary
                    required:
                        - toBinary
                    additionalProperties: false
                    title: TxToSend.message
                    type: object
                path:
                    title: TxToSend.path
                    type: string
            required:
                - message
                - path
            additionalProperties: false
            title: TxToSend
            type: object
        BroadcastPostBody:
            properties:
                tx_bytes:
                    title: BroadcastPostBody.tx_bytes
                mode:
                    title: BroadcastPostBody.mode
                    type: string
            required:
                - tx_bytes
                - mode
            additionalProperties: false
            title: BroadcastPostBody
            type: object
        iBitBadgesAddressList:
            properties:
                metadata:
                    title: iBitBadgesAddressList.metadata
                    description: The metadata of the address list.
                listsActivity:
                    items: {}
                    title: iBitBadgesAddressList.listsActivity
                    description: The activity of the address list.
                    type: array
                views:
                    additionalProperties:
                        properties:
                            ids:
                                items:
                                    title: ids.[]
                                    type: string
                                title: ids
                                type: array
                            type:
                                title: type
                                type: string
                            pagination:
                                title: pagination
                        required:
                            - ids
                            - type
                            - pagination
                        additionalProperties: false
                        type: object
                    title: iBitBadgesAddressList.views
                    description: The views of the address list.
                    type: object
                editClaims:
                    items:
                        properties:
                            claimId:
                                title: iBitBadgesAddressList.editClaims.[].claimId
                                type: string
                            plugins:
                                items: {}
                                title: iBitBadgesAddressList.editClaims.[].plugins
                                type: array
                        required:
                            - claimId
                            - plugins
                        additionalProperties: false
                        title: iBitBadgesAddressList.editClaims.[]
                        type: object
                    title: iBitBadgesAddressList.editClaims
                    type: array
            required:
                - listsActivity
                - views
                - editClaims
            additionalProperties: false
            title: iBitBadgesAddressList
            description: '@category Interfaces'
            type: object
        GetAddressListsBody:
            properties:
                listsToFetch:
                    items:
                        properties:
                            listId:
                                title: GetAddressListsBody.listsToFetch.[].listId
                                type: string
                            viewsToFetch:
                                items:
                                    properties:
                                        viewId:
                                            title: >-
                                                GetAddressListsBody.listsToFetch.[].viewsToFetch.[].viewId
                                            type: string
                                        viewType:
                                            title: >-
                                                GetAddressListsBody.listsToFetch.[].viewsToFetch.[].viewType
                                            enum:
                                                - listActivity
                                            type: string
                                        bookmark:
                                            title: >-
                                                GetAddressListsBody.listsToFetch.[].viewsToFetch.[].bookmark
                                            type: string
                                    required:
                                        - viewId
                                        - viewType
                                        - bookmark
                                    additionalProperties: false
                                    title: >-
                                        GetAddressListsBody.listsToFetch.[].viewsToFetch.[]
                                    type: object
                                title: GetAddressListsBody.listsToFetch.[].viewsToFetch
                                type: array
                            fetchPrivateParams:
                                title: >-
                                    GetAddressListsBody.listsToFetch.[].fetchPrivateParams
                                type: boolean
                        required:
                            - listId
                        additionalProperties: false
                        title: GetAddressListsBody.listsToFetch.[]
                        type: object
                    title: GetAddressListsBody.listsToFetch
                    description: >-
                        The lists and accompanyin details to fetch. Supports on-chain,
                        off-chain, and reserved lists.
                    type: array
            required:
                - listsToFetch
            additionalProperties: false
            title: GetAddressListsBody
            description: '@category API Requests / Responses'
            type: object
        iGetAddressListsRouteSuccessResponse:
            properties:
                addressLists:
                    items:
                        $ref: '#/components/schemas/iBitBadgesAddressList'
                        title: iGetAddressListsRouteSuccessResponse.addressLists.[]
                    title: iGetAddressListsRouteSuccessResponse.addressLists
                    type: array
            required:
                - addressLists
            additionalProperties: false
            title: iGetAddressListsRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        UpdateAddressListsBody:
            properties:
                addressLists:
                    items:
                        properties:
                            private:
                                title: private
                                type: boolean
                            editClaims:
                                items:
                                    properties:
                                        claimId:
                                            title: editClaims.[].claimId
                                            type: string
                                        plugins:
                                            items: {}
                                            title: editClaims.[].plugins
                                            type: array
                                    required:
                                        - claimId
                                        - plugins
                                    additionalProperties: false
                                    title: editClaims.[]
                                    type: object
                                title: editClaims
                                type: array
                            viewableWithLink:
                                title: viewableWithLink
                                type: boolean
                        required:
                            - editClaims
                        additionalProperties: false
                        type: object
                    title: UpdateAddressListsBody.addressLists
                    description: |-
                        New address lists to update.
                        Requester must be creator of the lists.
                        Only applicable to off-chain balances.
                    type: array
            required:
                - addressLists
            additionalProperties: false
            title: UpdateAddressListsBody
            description: '@category API Requests / Responses'
            type: object
        iUpdateAddressListsRouteSuccessResponse:
            additionalProperties: false
            title: iUpdateAddressListsRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        DeleteAddressListsBody:
            properties:
                listIds:
                    items:
                        title: DeleteAddressListsBody.listIds.[]
                        type: string
                    title: DeleteAddressListsBody.listIds
                    description: The list IDs to delete.
                    type: array
            required:
                - listIds
            additionalProperties: false
            title: DeleteAddressListsBody
            description: '@category API Requests / Responses'
            type: object
        iDeleteAddressListsRouteSuccessResponse:
            additionalProperties: false
            title: iDeleteAddressListsRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        PermissionNameString:
            enum:
                - canDeleteCollection
                - canArchiveCollection
                - canUpdateOffChainBalancesMetadata
                - canUpdateBadgeMetadata
                - canUpdateCollectionMetadata
                - canCreateMoreBadges
                - canUpdateCollectionApprovals
                - canUpdateAutoApproveSelfInitiatedIncomingTransfers
                - canUpdateAutoApproveSelfInitiatedOutgoingTransfers
                - canUpdateStandards
                - canUpdateCustomData
                - canUpdateManager
            title: PermissionNameString
            description: '@category Permissions'
            type: string
        BlockinAssetConditionGroup:
            anyOf: []
            title: BlockinAssetConditionGroup
            description: '@category Blockin'
        FilterBadgesInCollectionRequestBody:
            properties:
                collectionId:
                    title: FilterBadgesInCollectionRequestBody.collectionId
                    description: The collection ID to filter
                    anyOf:
                        - type: string
                        - type: number
                badgeIds:
                    items: {}
                    title: FilterBadgesInCollectionRequestBody.badgeIds
                    description: >-
                        Limit to specific badge IDs. Leave undefined to not filter by badge
                        ID.
                    type: array
                categories:
                    items:
                        title: FilterBadgesInCollectionRequestBody.categories.[]
                        type: string
                    title: FilterBadgesInCollectionRequestBody.categories
                    description: Limit to specific lists. Leave undefined to not filter by list.
                    type: array
                tags:
                    items:
                        title: FilterBadgesInCollectionRequestBody.tags.[]
                        type: string
                    title: FilterBadgesInCollectionRequestBody.tags
                    description: Limit to specific lists. Leave undefined to not filter by list.
                    type: array
                mostViewed:
                    enum:
                        - daily
                        - allTime
                        - weekly
                        - monthly
                        - yearly
                    title: FilterBadgesInCollectionRequestBody.mostViewed
                    description: >-
                        mostViewed is a special view that sorts by most viewed badges. May
                        be incompatible with other filters.
                    type: string
                bookmark:
                    title: FilterBadgesInCollectionRequestBody.bookmark
                    description: Pagination bookmark. Leave undefined or "" for first request.
                    type: string
                attributes:
                    items:
                        properties:
                            name:
                                title: FilterBadgesInCollectionRequestBody.attributes.[].name
                                type: string
                            value:
                                title: FilterBadgesInCollectionRequestBody.attributes.[].value
                                anyOf:
                                    - type: string
                                    - type: number
                                    - type: boolean
                        required:
                            - name
                            - value
                        additionalProperties: false
                        title: FilterBadgesInCollectionRequestBody.attributes.[]
                        type: object
                    title: FilterBadgesInCollectionRequestBody.attributes
                    description: Attribute queries
                    type: array
            required:
                - collectionId
            additionalProperties: false
            title: FilterBadgesInCollectionRequestBody
            description: '@category API Requests / Responses'
            type: object
        iFilterBadgesInCollectionSuccessResponse:
            properties:
                badgeIds:
                    items: {}
                    title: iFilterBadgesInCollectionSuccessResponse.badgeIds
                    type: array
                pagination:
                    title: iFilterBadgesInCollectionSuccessResponse.pagination
            required:
                - badgeIds
                - pagination
            additionalProperties: false
            title: iFilterBadgesInCollectionSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        GetOwnersForBadgeBody:
            properties:
                bookmark:
                    title: GetOwnersForBadgeBody.bookmark
                    description: >-
                        The pagination bookmark for where to start the request. Bookmarks
                        are obtained via the previous response. "" for first request.
                    type: string
            additionalProperties: false
            title: GetOwnersForBadgeBody
            description: '@category API Requests / Responses'
            type: object
        iGetOwnersForBadgeRouteSuccessResponse:
            properties:
                owners:
                    items: {}
                    title: iGetOwnersForBadgeRouteSuccessResponse.owners
                    description: Represents a list of owners balance details.
                    type: array
                pagination:
                    title: iGetOwnersForBadgeRouteSuccessResponse.pagination
                    description: Represents pagination information.
            required:
                - owners
                - pagination
            additionalProperties: false
            title: iGetOwnersForBadgeRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        GetBadgeBalanceByAddressBody:
            additionalProperties: false
            title: GetBadgeBalanceByAddressBody
            description: '@category API Requests / Responses'
            type: object
        iGetBadgeBalanceByAddressRouteSuccessResponse:
            additionalProperties: false
            title: iGetBadgeBalanceByAddressRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        GetBadgeActivityBody:
            properties:
                bookmark:
                    title: GetBadgeActivityBody.bookmark
                    description: >-
                        An optional bookmark for pagination. Bookmarks are obtained via the
                        previous response. "" for first request.
                    type: string
            additionalProperties: false
            title: GetBadgeActivityBody
            description: '@category API Requests / Responses'
            type: object
        iGetBadgeActivityRouteSuccessResponse:
            properties:
                activity:
                    items: {}
                    title: iGetBadgeActivityRouteSuccessResponse.activity
                    description: Array of transfer activity information.
                    type: array
                pagination:
                    title: iGetBadgeActivityRouteSuccessResponse.pagination
                    description: Pagination information.
            required:
                - activity
                - pagination
            additionalProperties: false
            title: iGetBadgeActivityRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        MetadataFetchOptions:
            properties:
                doNotFetchCollectionMetadata:
                    title: MetadataFetchOptions.doNotFetchCollectionMetadata
                    description: If true, collection metadata will not be fetched.
                    type: boolean
                metadataIds:
                    anyOf:
                        - title: MetadataFetchOptions.metadataIds
                          type: string
                        - items:
                              title: MetadataFetchOptions.metadataIds.[]
                              type: number
                          title: MetadataFetchOptions.metadataIds.[]
                          type: array
                        - items: {}
                          title: MetadataFetchOptions.metadataIds.[]
                          type: array
                    title: MetadataFetchOptions.metadataIds
                    description: >-
                        If present, the metadata corresponding to the specified metadata IDs
                        will be fetched.

                        Metadata IDs are helpful when determining UNQIUE URIs to be fetched.


                        If badges 1-10000 all share the same URI, they will have the same
                        single metadata ID.

                        If badge 1 has a different URI than badges 2-10000, badge 1 will
                        have a different metadata ID than the rest/


                        We scan in increasing order of badge IDs, so metadata ID 1 will be
                        for badge 1-X, metadata ID 2 will be for badge X+1-Y, etc.


                        ID 0 = Collection metadata fetch

                        ID 1 = First badge metadata fetch

                        ID 2 = Second badge metadata fetch (if present)

                        And so on

                        Learn more in documentation.
                uris:
                    items:
                        title: MetadataFetchOptions.uris.[]
                        type: string
                    title: MetadataFetchOptions.uris
                    description: >-
                        If present, the metadata corresponding to the specified URIs will be
                        fetched.
                    type: array
                badgeIds:
                    anyOf:
                        - title: MetadataFetchOptions.badgeIds
                          type: string
                        - items:
                              title: MetadataFetchOptions.badgeIds.[]
                              type: number
                          title: MetadataFetchOptions.badgeIds.[]
                          type: array
                        - items: {}
                          title: MetadataFetchOptions.badgeIds.[]
                          type: array
                    title: MetadataFetchOptions.badgeIds
                    description: >-
                        If present, the metadata corresponding to the specified badge IDs
                        will be fetched.
            additionalProperties: false
            title: MetadataFetchOptions
            description: |-
                Defines the options for fetching metadata.
                @category API Requests / Responses
            type: object
        CollectionViewKey:
            enum:
                - transferActivity
                - reviews
                - owners
                - amountTrackers
                - challengeTrackers
            title: CollectionViewKey
            description: |-
                Supported view keys for fetching additional collection details.
                @category API Requests / Responses
            type: string
        GetAdditionalCollectionDetailsRequestBody:
            properties:
                viewsToFetch:
                    items:
                        properties:
                            viewType:
                                $ref: '#/components/schemas/CollectionViewKey'
                                title: >-
                                    GetAdditionalCollectionDetailsRequestBody.viewsToFetch.[].viewType
                                description: The base view type to fetch.
                            viewId:
                                title: >-
                                    GetAdditionalCollectionDetailsRequestBody.viewsToFetch.[].viewId
                                description: >-
                                    A unique view ID. This is used for pagination. All fetches w/
                                    same ID should be made with same criteria.
                                type: string
                            bookmark:
                                title: >-
                                    GetAdditionalCollectionDetailsRequestBody.viewsToFetch.[].bookmark
                                description: A bookmark to pass in for pagination. "" for first request.
                                type: string
                            oldestFirst:
                                title: >-
                                    GetAdditionalCollectionDetailsRequestBody.viewsToFetch.[].oldestFirst
                                description: If defined, we will return the oldest items first.
                                type: boolean
                        required:
                            - viewType
                            - viewId
                            - bookmark
                        additionalProperties: false
                        title: GetAdditionalCollectionDetailsRequestBody.viewsToFetch.[]
                        type: object
                    title: GetAdditionalCollectionDetailsRequestBody.viewsToFetch
                    description: If present, the specified views will be fetched.
                    type: array
                fetchTotalAndMintBalances:
                    title: GetAdditionalCollectionDetailsRequestBody.fetchTotalAndMintBalances
                    description: >-
                        If true, the total and mint balances will be fetched and will be put
                        in owners[].


                        collection.owners.find(x => x.cosmosAddresss === 'Mint')
                    type: boolean
                challengeTrackersToFetch:
                    items: {}
                    title: GetAdditionalCollectionDetailsRequestBody.challengeTrackersToFetch
                    description: >-
                        If present, the merkle challenges corresponding to the specified
                        merkle challenge IDs will be fetched.
                    type: array
                approvalTrackersToFetch:
                    items: {}
                    title: GetAdditionalCollectionDetailsRequestBody.approvalTrackersToFetch
                    description: >-
                        If present, the approvals trackers corresponding to the specified
                        approvals tracker IDs will be fetched.
                    type: array
                handleAllAndAppendDefaults:
                    title: GetAdditionalCollectionDetailsRequestBody.handleAllAndAppendDefaults
                    description: If true, we will append defaults with empty values.
                    type: boolean
                fetchPrivateParams:
                    title: GetAdditionalCollectionDetailsRequestBody.fetchPrivateParams
                    description: >-
                        Fetches private parameters for any claims in addition to public
                        parameters.
                    type: boolean
            additionalProperties: false
            title: GetAdditionalCollectionDetailsRequestBody
            description: >-
                Defines the options for fetching additional collection details.


                A view is a way of fetching additional details about a collection, and
                these will be queryable in the response via the `views` property.

                Each view has a bookmark that is used for pagination and must be
                supplied to get the next page.

                If the bookmark is not supplied, the first page will be returned.


                We support the following views:

                - `transferActivity` - Fetches the latest activity for the collection.

                - `latestAnnouncements` - Fetches the latest announcements for the
                collection.

                - `reviews` - Fetches the latest reviews for the collection.

                - `owners` - Fetches the owners of the collection sequentially in random
                order.

                - `merkleChallenges` - Fetches the merkle challenges for the collection
                in random order.

                - `approvalTrackers` - Fetches the approvals trackers for the collection
                in random order.

                @category API Requests / Responses
            type: object
        GetMetadataForCollectionRequestBody:
            properties:
                metadataToFetch:
                    $ref: '#/components/schemas/MetadataFetchOptions'
                    title: GetMetadataForCollectionRequestBody.metadataToFetch
                    description: >-
                        If present, we will fetch the metadata corresponding to the
                        specified options.


                        Consider using pruneMetadataToFetch for filtering out previously
                        fetched metadata.
            additionalProperties: false
            title: GetMetadataForCollectionRequestBody
            description: '@category API Requests / Responses'
            type: object
        GetCollectionBatchBody:
            properties:
                collectionsToFetch:
                    items:
                        allOf:
                            - properties:
                                  collectionId:
                                      title: collectionId
                                      description: The ID of the collection to fetch.
                                      anyOf:
                                          - type: string
                                          - type: number
                              required:
                                  - collectionId
                              additionalProperties: false
                              type: object
                            - $ref: '#/components/schemas/GetMetadataForCollectionRequestBody'
                            - $ref: '#/components/schemas/GetAdditionalCollectionDetailsRequestBody'
                    title: GetCollectionBatchBody.collectionsToFetch
                    type: array
            required:
                - collectionsToFetch
            additionalProperties: false
            title: GetCollectionBatchBody
            description: '@category API Requests / Responses'
            type: object
        iGetCollectionBatchRouteSuccessResponse:
            properties:
                collections:
                    items: {}
                    title: iGetCollectionBatchRouteSuccessResponse.collections
                    type: array
            required:
                - collections
            additionalProperties: false
            title: iGetCollectionBatchRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        GetCollectionByIdBody:
            properties:
                viewsToFetch:
                    items:
                        properties:
                            viewType:
                                $ref: '#/components/schemas/CollectionViewKey'
                                title: >-
                                    GetAdditionalCollectionDetailsRequestBody.viewsToFetch.[].viewType
                                description: The base view type to fetch.
                            viewId:
                                title: >-
                                    GetAdditionalCollectionDetailsRequestBody.viewsToFetch.[].viewId
                                description: >-
                                    A unique view ID. This is used for pagination. All fetches w/
                                    same ID should be made with same criteria.
                                type: string
                            bookmark:
                                title: >-
                                    GetAdditionalCollectionDetailsRequestBody.viewsToFetch.[].bookmark
                                description: A bookmark to pass in for pagination. "" for first request.
                                type: string
                            oldestFirst:
                                title: >-
                                    GetAdditionalCollectionDetailsRequestBody.viewsToFetch.[].oldestFirst
                                description: If defined, we will return the oldest items first.
                                type: boolean
                        required:
                            - viewType
                            - viewId
                            - bookmark
                        additionalProperties: false
                        title: GetAdditionalCollectionDetailsRequestBody.viewsToFetch.[]
                        type: object
                    title: GetAdditionalCollectionDetailsRequestBody.viewsToFetch
                    description: If present, the specified views will be fetched.
                    type: array
                fetchTotalAndMintBalances:
                    title: GetAdditionalCollectionDetailsRequestBody.fetchTotalAndMintBalances
                    description: >-
                        If true, the total and mint balances will be fetched and will be put
                        in owners[].


                        collection.owners.find(x => x.cosmosAddresss === 'Mint')
                    type: boolean
                challengeTrackersToFetch:
                    items: {}
                    title: GetAdditionalCollectionDetailsRequestBody.challengeTrackersToFetch
                    description: >-
                        If present, the merkle challenges corresponding to the specified
                        merkle challenge IDs will be fetched.
                    type: array
                approvalTrackersToFetch:
                    items: {}
                    title: GetAdditionalCollectionDetailsRequestBody.approvalTrackersToFetch
                    description: >-
                        If present, the approvals trackers corresponding to the specified
                        approvals tracker IDs will be fetched.
                    type: array
                handleAllAndAppendDefaults:
                    title: GetAdditionalCollectionDetailsRequestBody.handleAllAndAppendDefaults
                    description: If true, we will append defaults with empty values.
                    type: boolean
                fetchPrivateParams:
                    title: GetAdditionalCollectionDetailsRequestBody.fetchPrivateParams
                    description: >-
                        Fetches private parameters for any claims in addition to public
                        parameters.
                    type: boolean
                metadataToFetch:
                    $ref: '#/components/schemas/MetadataFetchOptions'
                    title: GetMetadataForCollectionRequestBody.metadataToFetch
                    description: >-
                        If present, we will fetch the metadata corresponding to the
                        specified options.


                        Consider using pruneMetadataToFetch for filtering out previously
                        fetched metadata.
            additionalProperties: false
            title: >-
                GetCollectionByIdBody,
                GetAdditionalCollectionDetailsRequestBody,
                GetMetadataForCollectionRequestBody
            description: >-
                @category API Requests / Responses

                Defines the options for fetching additional collection details.


                A view is a way of fetching additional details about a collection, and
                these will be queryable in the response via the `views` property.

                Each view has a bookmark that is used for pagination and must be
                supplied to get the next page.

                If the bookmark is not supplied, the first page will be returned.


                We support the following views:

                - `transferActivity` - Fetches the latest activity for the collection.

                - `latestAnnouncements` - Fetches the latest announcements for the
                collection.

                - `reviews` - Fetches the latest reviews for the collection.

                - `owners` - Fetches the owners of the collection sequentially in random
                order.

                - `merkleChallenges` - Fetches the merkle challenges for the collection
                in random order.

                - `approvalTrackers` - Fetches the approvals trackers for the collection
                in random order.

                @category API Requests / Responses

                @category API Requests / Responses
            type: object
        iGetCollectionByIdRouteSuccessResponse:
            properties:
                collection:
                    title: iGetCollectionByIdRouteSuccessResponse.collection
            required:
                - collection
            additionalProperties: false
            title: iGetCollectionByIdRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        RefreshMetadataBody:
            additionalProperties: false
            title: RefreshMetadataBody
            description: '@category API Requests / Responses'
            type: object
        iRefreshMetadataRouteSuccessResponse:
            additionalProperties: false
            title: iRefreshMetadataRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        RefreshStatusBody:
            additionalProperties: false
            title: RefreshStatusBody
            description: '@category API Requests / Responses'
            type: object
        iRefreshStatusRouteSuccessResponse:
            properties:
                inQueue:
                    title: iRefreshStatusRouteSuccessResponse.inQueue
                    description: Boolean indicating if the collection is currently in the queue.
                    type: boolean
                errorDocs:
                    items: {}
                    title: iRefreshStatusRouteSuccessResponse.errorDocs
                    description: Array of error documents corresponding to the collection.
                    type: array
                refreshDoc:
                    title: iRefreshStatusRouteSuccessResponse.refreshDoc
                    description: The status information corresponding to the collection.
            required:
                - inQueue
                - errorDocs
                - refreshDoc
            additionalProperties: false
            title: iRefreshStatusRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        iCosmosCoin:
            properties:
                amount:
                    title: iCosmosCoin.amount
                    description: The amount of the coin.
                    anyOf:
                        - type: string
                        - type: number
                denom:
                    title: iCosmosCoin.denom
                    description: The denomination of the coin.
                    type: string
            required:
                - amount
                - denom
            additionalProperties: false
            title: iCosmosCoin
            description: '@category Interfaces'
            type: object
        iOffChainBalancesMap:
            additionalProperties:
                items: {}
                title: '[]'
                type: array
            title: iOffChainBalancesMap
            description: '@category Interfaces'
            type: object
        OffChainBalancesMap:
            additionalProperties: {}
            title: OffChainBalancesMap
            description: >-
                @category Balances

                @typedef OffChainBalancesMap is a map of cosmos addresses or listIDs to
                an array of balances. This is the expected format

                for collections with off-chain balances. Host this on your server in
                JSON format.
            type: object
        iTransferWithIncrements:
            properties:
                toAddressesLength:
                    title: iTransferWithIncrements.toAddressesLength
                    description: >-
                        The number of addresses to send the badges to. This takes priority
                        over toAddresses.length (used when you don't know exact addresses
                        (i.e. you know number of codes)).
                    anyOf:
                        - type: string
                        - type: number
                incrementBadgeIdsBy:
                    title: iTransferWithIncrements.incrementBadgeIdsBy
                    description: The number to increment the badgeIDs by for each transfer.
                    anyOf:
                        - type: string
                        - type: number
                incrementOwnershipTimesBy:
                    title: iTransferWithIncrements.incrementOwnershipTimesBy
                    description: The number to increment the ownershipTimes by for each transfer.
                    anyOf:
                        - type: string
                        - type: number
            additionalProperties: false
            title: iTransferWithIncrements
            description: '@category Interfaces'
            type: object
        EIP712ToSign:
            properties:
                types:
                    title: EIP712ToSign.types
                    type: object
                primaryType:
                    title: EIP712ToSign.primaryType
                    type: string
                domain:
                    properties:
                        name:
                            title: EIP712ToSign.domain.name
                            type: string
                        version:
                            title: EIP712ToSign.domain.version
                            type: string
                        chainId:
                            title: EIP712ToSign.domain.chainId
                            type: number
                        verifyingContract:
                            title: EIP712ToSign.domain.verifyingContract
                            type: string
                        salt:
                            title: EIP712ToSign.domain.salt
                            type: string
                    required:
                        - name
                        - version
                        - chainId
                        - verifyingContract
                        - salt
                    additionalProperties: false
                    title: EIP712ToSign.domain
                    type: object
                message:
                    title: EIP712ToSign.message
                    type: object
            required:
                - types
                - primaryType
                - domain
                - message
            additionalProperties: false
            title: EIP712ToSign
            description: >-
                EI712ToSign represents a signable EIP-712 payload that can be signed
                using MetaMask or Keplr.

                @remarks Evmos uses the EIP-712 protocol to wrap Cosmos SDK Transactions
                for Ethereum signing clients.

                EIP-712 payload signatures can be used interchangeably with standard
                Cosmos SDK signatures.

                Learn more about the  ://eips.ethereum.org/EIPS/eip-712 | EIP-712
                Standard

                @category Transactions
            type: object
        Fee:
            properties:
                amount:
                    title: Fee.amount
                    type: string
                denom:
                    title: Fee.denom
                    type: string
                gas:
                    title: Fee.gas
                    type: string
            required:
                - amount
                - denom
                - gas
            additionalProperties: false
            title: Fee
            description: >-
                Fee represents a Cosmos SDK transaction fee object.

                @remarks Learn more about fees in Evmos from the
                 ://docs.cosmos.network/main/basics/gas-fees | Cosmos SDK Fee Docs
                and the  ://docs.evmos.org/protocol/concepts/gas-and-fees | Evmos Gas
                and Fee Docs

                @category Transactions
            type: object
        Sender:
            properties:
                accountAddress:
                    title: Sender.accountAddress
                    type: string
                sequence:
                    title: Sender.sequence
                    type: number
                accountNumber:
                    title: Sender.accountNumber
                    type: number
                pubkey:
                    title: Sender.pubkey
                    type: string
            required:
                - accountAddress
                - sequence
                - accountNumber
                - pubkey
            additionalProperties: false
            title: Sender
            description: >-
                Sender represents a Cosmos SDK Transaction signer.

                @remarks A sender object is used to populate the Cosmos SDK's SignerInfo
                field,

                which is used to declare transaction signers.

                @category Transactions
            type: object
        Chain:
            properties:
                chainId:
                    title: Chain.chainId
                    type: number
                cosmosChainId:
                    title: Chain.cosmosChainId
                    type: string
                chain:
                    title: Chain.chain
            required:
                - chainId
                - cosmosChainId
                - chain
            additionalProperties: false
            title: Chain
            description: >-
                Chain represents the base chain's chainID.

                @remarks chainId corresponds to a numerical Ethereum ChainID (e.g. 9001)

                cosmosChainId corresponds to a Cosmos SDK string ChainID (e.g.
                'evmos_9001-2'

                @category Transactions
            type: object
        iBatchBadgeDetails:
            properties:
                collectionId:
                    title: iBatchBadgeDetails.collectionId
                    anyOf:
                        - type: string
                        - type: number
                badgeIds:
                    items: {}
                    title: iBatchBadgeDetails.badgeIds
                    type: array
            required:
                - collectionId
                - badgeIds
            additionalProperties: false
            title: iBatchBadgeDetails
            description: '@category Interfaces'
            type: object
        GetStatusBody:
            additionalProperties: false
            title: GetStatusBody
            description: '@category API Requests / Responses'
            type: object
        iGetStatusRouteSuccessResponse:
            properties:
                status:
                    title: iGetStatusRouteSuccessResponse.status
                    description: Includes status details about the indexer / blockchain.
                    $ref: '#/components/schemas/iStatusDoc'
            required:
                - status
            additionalProperties: false
            title: iGetStatusRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        GetSearchBody:
            properties:
                noCollections:
                    title: GetSearchBody.noCollections
                    description: If true, we will skip all collection queries.
                    type: boolean
                noAccounts:
                    title: GetSearchBody.noAccounts
                    description: If true, we will skip all account queries.
                    type: boolean
                noAddressLists:
                    title: GetSearchBody.noAddressLists
                    description: If true, we will skip all address list queries.
                    type: boolean
                noBadges:
                    title: GetSearchBody.noBadges
                    description: If true, we will skip all badge queries.
                    type: boolean
                specificCollectionId:
                    title: GetSearchBody.specificCollectionId
                    description: If true, we will limit collection results to a single collection.
                    anyOf:
                        - type: string
                        - type: number
            additionalProperties: false
            title: GetSearchBody
            description: '@category API Requests / Responses'
            type: object
        iGetSearchRouteSuccessResponse:
            properties:
                collections:
                    items: {}
                    title: iGetSearchRouteSuccessResponse.collections
                    type: array
                accounts:
                    items: {}
                    title: iGetSearchRouteSuccessResponse.accounts
                    type: array
                addressLists:
                    items: {}
                    title: iGetSearchRouteSuccessResponse.addressLists
                    type: array
                badges:
                    items:
                        properties:
                            collection:
                                title: iGetSearchRouteSuccessResponse.badges.[].collection
                            badgeIds:
                                items: {}
                                title: iGetSearchRouteSuccessResponse.badges.[].badgeIds
                                type: array
                        required:
                            - collection
                            - badgeIds
                        additionalProperties: false
                        title: iGetSearchRouteSuccessResponse.badges.[]
                        type: object
                    title: iGetSearchRouteSuccessResponse.badges
                    type: array
            required:
                - collections
                - accounts
                - addressLists
                - badges
            additionalProperties: false
            title: iGetSearchRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        CodesAndPasswords:
            properties:
                cid:
                    title: CodesAndPasswords.cid
                    description: The IPFS CID of the merkle challenge.
                    type: string
                codes:
                    items:
                        title: CodesAndPasswords.codes.[]
                        type: string
                    title: CodesAndPasswords.codes
                    type: array
                password:
                    title: CodesAndPasswords.password
                    type: string
            required:
                - cid
                - codes
                - password
            additionalProperties: false
            title: CodesAndPasswords
            description: >-
                Type to allow specifying codes and passwords for a merkle challenge.


                We only support storing codes and passwords for merkle challenges
                created by BitBadges via IPFS.

                The IPFS CID of the merkle challenge is used to identify the merkle
                challenge.


                Note that we only support storing a set of codes and passwords once per
                unique CID.

                @category API Requests / Responses
            type: object
        GetClaimsBody:
            properties:
                claimIds:
                    items:
                        title: GetClaimsBody.claimIds.[]
                        type: string
                    title: GetClaimsBody.claimIds
                    type: array
                listId:
                    title: GetClaimsBody.listId
                    type: string
            required:
                - claimIds
            additionalProperties: false
            title: GetClaimsBody
            description: '@category API Requests / Responses'
            type: object
        iGetClaimsRouteSuccessResponse:
            properties:
                claims:
                    items:
                        properties:
                            claimId:
                                title: iGetClaimsRouteSuccessResponse.claims.[].claimId
                                type: string
                            balancesToSet:
                                title: iGetClaimsRouteSuccessResponse.claims.[].balancesToSet
                            plugins:
                                items: {}
                                title: iGetClaimsRouteSuccessResponse.claims.[].plugins
                                type: array
                            manualDistribution:
                                title: iGetClaimsRouteSuccessResponse.claims.[].manualDistribution
                                type: boolean
                        required:
                            - claimId
                            - plugins
                        additionalProperties: false
                        title: iGetClaimsRouteSuccessResponse.claims.[]
                        type: object
                    title: iGetClaimsRouteSuccessResponse.claims
                    type: array
            required:
                - claims
            additionalProperties: false
            title: iGetClaimsRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        CompleteClaimBody:
            properties:
                prevCodesOnly:
                    title: CompleteClaimBody.prevCodesOnly
                    type: boolean
            additionalProperties: {}
            title: CompleteClaimBody
            description: '@category API Requests / Responses'
            type: object
        iCompleteClaimRouteSuccessResponse:
            properties:
                code:
                    title: iCompleteClaimRouteSuccessResponse.code
                    type: string
                prevCodes:
                    items:
                        title: iCompleteClaimRouteSuccessResponse.prevCodes.[]
                        type: string
                    title: iCompleteClaimRouteSuccessResponse.prevCodes
                    type: array
            additionalProperties: false
            title: iCompleteClaimRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        DeleteReviewBody:
            properties:
                reviewId:
                    title: DeleteReviewBody.reviewId
                    description: The review ID to delete.
                    type: string
            required:
                - reviewId
            additionalProperties: false
            title: DeleteReviewBody
            description: '@category API Requests / Responses'
            type: object
        iDeleteReviewRouteSuccessResponse:
            additionalProperties: false
            title: iDeleteReviewRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        AddReviewForCollectionBody:
            properties:
                review:
                    title: AddReviewForCollectionBody.review
                    description: The review text (1 to 2048 characters).
                    type: string
                stars:
                    title: AddReviewForCollectionBody.stars
                    description: The star rating (1 to 5).
                    anyOf:
                        - type: string
                        - type: number
            required:
                - review
                - stars
            additionalProperties: false
            title: AddReviewForCollectionBody
            description: '@category API Requests / Responses'
            type: object
        iAddReviewForCollectionRouteSuccessResponse:
            additionalProperties: false
            title: iAddReviewForCollectionRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        AddReviewForUserBody:
            properties:
                review:
                    title: AddReviewForUserBody.review
                    description: The review text (1 to 2048 characters).
                    type: string
                stars:
                    title: AddReviewForUserBody.stars
                    description: The number of stars (1 to 5) for the review.
                    anyOf:
                        - type: string
                        - type: number
            required:
                - review
                - stars
            additionalProperties: false
            title: AddReviewForUserBody
            description: '@category API Requests / Responses'
            type: object
        iAddReviewForUserRouteSuccessResponse:
            additionalProperties: false
            title: iAddReviewForUserRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        UpdateAccountInfoBody:
            properties:
                discord:
                    title: UpdateAccountInfoBody.discord
                    description: The Discord username.
                    type: string
                twitter:
                    title: UpdateAccountInfoBody.twitter
                    description: The Twitter username.
                    type: string
                github:
                    title: UpdateAccountInfoBody.github
                    description: The GitHub username.
                    type: string
                telegram:
                    title: UpdateAccountInfoBody.telegram
                    description: The Telegram username.
                    type: string
                seenActivity:
                    title: UpdateAccountInfoBody.seenActivity
                    description: The last seen activity timestamp.
                    anyOf:
                        - type: string
                        - type: number
                readme:
                    title: UpdateAccountInfoBody.readme
                    description: The README details.
                    type: string
                hiddenBadges:
                    items: {}
                    title: UpdateAccountInfoBody.hiddenBadges
                    description: The badges to hide and not view for this profile's portfolio
                    type: array
                hiddenLists:
                    items:
                        title: UpdateAccountInfoBody.hiddenLists.[]
                        type: string
                    title: UpdateAccountInfoBody.hiddenLists
                    description: The lists to hide and not view for this profile's portfolio
                    type: array
                customPages:
                    properties:
                        badges:
                            items: {}
                            title: UpdateAccountInfoBody.customPages.badges
                            type: array
                        lists:
                            items: {}
                            title: UpdateAccountInfoBody.customPages.lists
                            type: array
                    required:
                        - badges
                        - lists
                    additionalProperties: false
                    title: UpdateAccountInfoBody.customPages
                    description: >-
                        An array of custom pages on the user's portolio. Used to customize,
                        sort, and group badges / lists into pages.
                    type: object
                watchlists:
                    properties:
                        badges:
                            items: {}
                            title: UpdateAccountInfoBody.watchlists.badges
                            type: array
                        lists:
                            items: {}
                            title: UpdateAccountInfoBody.watchlists.lists
                            type: array
                    required:
                        - badges
                        - lists
                    additionalProperties: false
                    title: UpdateAccountInfoBody.watchlists
                    description: The watchlist of badges / lists
                    type: object
                profilePicUrl:
                    title: UpdateAccountInfoBody.profilePicUrl
                    description: The profile picture URL.
                    type: string
                username:
                    title: UpdateAccountInfoBody.username
                    description: The username.
                    type: string
                profilePicImageFile:
                    title: UpdateAccountInfoBody.profilePicImageFile
                    description: The profile picture image file. We will then upload to our CDN.
                notifications:
                    properties:
                        email:
                            title: UpdateAccountInfoBody.notifications.email
                            type: string
                        antiPhishingCode:
                            title: UpdateAccountInfoBody.notifications.antiPhishingCode
                            type: string
                        preferences:
                            additionalProperties: false
                            title: UpdateAccountInfoBody.notifications.preferences
                            type: object
                    additionalProperties: false
                    title: UpdateAccountInfoBody.notifications
                    description: The notification preferences for the user.
                    type: object
                approvedSignInMethods:
                    properties:
                        discord:
                            properties:
                                username:
                                    title: >-
                                        UpdateAccountInfoBody.approvedSignInMethods.discord.username
                                    type: string
                                discriminator:
                                    title: >-
                                        UpdateAccountInfoBody.approvedSignInMethods.discord.discriminator
                                    type: string
                                id:
                                    title: >-
                                        UpdateAccountInfoBody.approvedSignInMethods.discord.id
                                    type: string
                            required:
                                - username
                                - id
                            additionalProperties: false
                            title: UpdateAccountInfoBody.approvedSignInMethods.discord
                            type: object
                    additionalProperties: false
                    title: UpdateAccountInfoBody.approvedSignInMethods
                    description: Approved sign in methods
                    type: object
            additionalProperties: false
            title: UpdateAccountInfoBody
            description: '@category API Requests / Responses'
            type: object
        iUpdateAccountInfoRouteSuccessResponse:
            additionalProperties: false
            title: iUpdateAccountInfoRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        AddBalancesToOffChainStorageBody:
            properties:
                balances:
                    title: AddBalancesToOffChainStorageBody.balances
                    description: A map of Cosmos addresses or list IDs -> Balance[].
                offChainClaims:
                    items:
                        properties:
                            claimId:
                                title: >-
                                    AddBalancesToOffChainStorageBody.offChainClaims.[].claimId
                                type: string
                            plugins:
                                items: {}
                                title: >-
                                    AddBalancesToOffChainStorageBody.offChainClaims.[].plugins
                                type: array
                            balancesToSet:
                                title: >-
                                    AddBalancesToOffChainStorageBody.offChainClaims.[].balancesToSet
                        required:
                            - claimId
                            - plugins
                        additionalProperties: false
                        title: AddBalancesToOffChainStorageBody.offChainClaims.[]
                        type: object
                    title: AddBalancesToOffChainStorageBody.offChainClaims
                    description: The claim details
                    type: array
                method:
                    enum:
                        - ipfs
                        - centralized
                    title: AddBalancesToOffChainStorageBody.method
                    description: The method for storing balances (ipfs or centralized).
                    type: string
                collectionId:
                    title: AddBalancesToOffChainStorageBody.collectionId
                    description: The collection ID.
                    anyOf:
                        - type: string
                        - type: number
            required:
                - method
                - collectionId
            additionalProperties: false
            title: AddBalancesToOffChainStorageBody
            description: '@category API Requests / Responses'
            type: object
        iAddBalancesToOffChainStorageRouteSuccessResponse:
            properties:
                uri:
                    title: iAddBalancesToOffChainStorageRouteSuccessResponse.uri
                    description: The URI of the stored data.
                    type: string
                result:
                    properties:
                        cid:
                            title: iAddBalancesToOffChainStorageRouteSuccessResponse.result.cid
                            type: string
                    additionalProperties: false
                    title: iAddBalancesToOffChainStorageRouteSuccessResponse.result
                    description: The result object with CID.
                    type: object
            required:
                - result
            additionalProperties: false
            title: iAddBalancesToOffChainStorageRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        AddMetadataToIpfsBody:
            properties:
                collectionMetadata:
                    title: AddMetadataToIpfsBody.collectionMetadata
                    description: The collection metadata to add to IPFS
                badgeMetadata:
                    anyOf:
                        - items: {}
                          title: AddMetadataToIpfsBody.badgeMetadata.[]
                          type: array
                        - items: {}
                          title: AddMetadataToIpfsBody.badgeMetadata.[]
                          type: array
                    title: AddMetadataToIpfsBody.badgeMetadata
                    description: The badge metadata to add to IPFS
            additionalProperties: false
            title: AddMetadataToIpfsBody
            description: '@category API Requests / Responses'
            type: object
        iAddMetadataToIpfsRouteSuccessResponse:
            properties:
                collectionMetadataResult:
                    properties:
                        cid:
                            title: >-
                                iAddMetadataToIpfsRouteSuccessResponse.collectionMetadataResult.cid
                            type: string
                    required:
                        - cid
                    additionalProperties: false
                    title: iAddMetadataToIpfsRouteSuccessResponse.collectionMetadataResult
                    description: The result for collection metadata.
                    type: object
                badgeMetadataResults:
                    items:
                        properties:
                            cid:
                                title: >-
                                    iAddMetadataToIpfsRouteSuccessResponse.badgeMetadataResults.[].cid
                                type: string
                        required:
                            - cid
                        additionalProperties: false
                        title: iAddMetadataToIpfsRouteSuccessResponse.badgeMetadataResults.[]
                        type: object
                    title: iAddMetadataToIpfsRouteSuccessResponse.badgeMetadataResults
                    description: An array of badge metadata results, if applicable.
                    type: array
            required:
                - badgeMetadataResults
            additionalProperties: false
            title: iAddMetadataToIpfsRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        AddApprovalDetailsToOffChainStorageBody:
            properties:
                name:
                    title: AddApprovalDetailsToOffChainStorageBody.name
                    description: The name of the approval.
                    type: string
                description:
                    title: AddApprovalDetailsToOffChainStorageBody.description
                    description: The description of the approval.
                    type: string
                challengeDetails:
                    title: AddApprovalDetailsToOffChainStorageBody.challengeDetails
                    description: The challenge details.
                offChainClaims:
                    items:
                        properties:
                            plugins:
                                items: {}
                                title: >-
                                    AddApprovalDetailsToOffChainStorageBody.offChainClaims.[].plugins
                                description: The plugins for the approval.
                                type: array
                            claimId:
                                title: >-
                                    AddApprovalDetailsToOffChainStorageBody.offChainClaims.[].claimId
                                type: string
                            manualDistribution:
                                title: >-
                                    AddApprovalDetailsToOffChainStorageBody.offChainClaims.[].manualDistribution
                                type: boolean
                        required:
                            - plugins
                            - claimId
                        additionalProperties: false
                        title: >-
                            AddApprovalDetailsToOffChainStorageBody.offChainClaims.[]
                        type: object
                    title: AddApprovalDetailsToOffChainStorageBody.offChainClaims
                    type: array
            required:
                - name
                - description
            additionalProperties: false
            title: AddApprovalDetailsToOffChainStorageBody
            description: '@category API Requests / Responses'
            type: object
        iAddApprovalDetailsToOffChainStorageRouteSuccessResponse:
            properties:
                result:
                    properties:
                        cid:
                            title: >-
                                iAddApprovalDetailsToOffChainStorageRouteSuccessResponse.result.cid
                            type: string
                    required:
                        - cid
                    additionalProperties: false
                    title: iAddApprovalDetailsToOffChainStorageRouteSuccessResponse.result
                    description: The result with CID for IPFS.
                    type: object
            required:
                - result
            additionalProperties: false
            title: iAddApprovalDetailsToOffChainStorageRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        GetSignInChallengeBody:
            properties:
                chain:
                    title: GetSignInChallengeBody.chain
                    description: The blockchain to be signed in with.
                address:
                    title: GetSignInChallengeBody.address
                    description: The user's blockchain address (their native L1 address).
                    type: string
                hours:
                    title: GetSignInChallengeBody.hours
                    description: The number of hours to be signed in for.
                    anyOf:
                        - type: string
                        - type: number
            required:
                - chain
                - address
            additionalProperties: false
            title: GetSignInChallengeBody
            description: '@category API Requests / Responses'
            type: object
        iGetSignInChallengeRouteSuccessResponse:
            properties:
                nonce:
                    title: iGetSignInChallengeRouteSuccessResponse.nonce
                    description: The nonce for the challenge.
                    type: string
                params:
                    title: iGetSignInChallengeRouteSuccessResponse.params
                    description: The challenge parameters.
                message:
                    title: iGetSignInChallengeRouteSuccessResponse.message
                    description: The Blockin challenge message to sign.
                    type: string
            required:
                - nonce
                - params
                - message
            additionalProperties: false
            title: iGetSignInChallengeRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        VerifySignInBody:
            properties:
                message:
                    title: VerifySignInBody.message
                    description: The original Blockin message
                    type: string
                signature:
                    title: VerifySignInBody.signature
                    description: The signature of the Blockin message
                    type: string
                publicKey:
                    title: VerifySignInBody.publicKey
                    description: Required for some chains. The public key of the signer.
                    type: string
            required:
                - message
                - signature
            additionalProperties: false
            title: VerifySignInBody
            description: '@category API Requests / Responses'
            type: object
        iVerifySignInRouteSuccessResponse:
            additionalProperties: false
            title: iVerifySignInRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        CheckSignInStatusRequestBody:
            additionalProperties: false
            title: CheckSignInStatusRequestBody
            description: '@category API Requests / Responses'
            type: object
        iCheckSignInStatusSuccessResponse:
            properties:
                signedIn:
                    title: iCheckSignInStatusSuccessResponse.signedIn
                    description: Indicates whether the user is signed in.
                    type: boolean
                message:
                    title: iCheckSignInStatusSuccessResponse.message
                    description: The Blockin message that was signed.
                    type: string
                discord:
                    properties:
                        username:
                            title: iCheckSignInStatusSuccessResponse.discord.username
                            type: string
                        discriminator:
                            title: iCheckSignInStatusSuccessResponse.discord.discriminator
                            type: string
                        id:
                            title: iCheckSignInStatusSuccessResponse.discord.id
                            type: string
                    required:
                        - username
                        - discriminator
                        - id
                    additionalProperties: false
                    title: iCheckSignInStatusSuccessResponse.discord
                    description: Signed in with Discord username and discriminator?
                    type: object
                twitter:
                    properties:
                        id:
                            title: iCheckSignInStatusSuccessResponse.twitter.id
                            type: string
                        username:
                            title: iCheckSignInStatusSuccessResponse.twitter.username
                            type: string
                    required:
                        - id
                        - username
                    additionalProperties: false
                    title: iCheckSignInStatusSuccessResponse.twitter
                    description: Signed in with Twitter username?
                    type: object
            required:
                - signedIn
                - message
            additionalProperties: false
            title: iCheckSignInStatusSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        SignOutRequestBody:
            properties:
                signOutDiscord:
                    title: SignOutRequestBody.signOutDiscord
                    type: boolean
                signOutTwitter:
                    title: SignOutRequestBody.signOutTwitter
                    type: boolean
                signOutBlockin:
                    title: SignOutRequestBody.signOutBlockin
                    type: boolean
            required:
                - signOutDiscord
                - signOutTwitter
                - signOutBlockin
            additionalProperties: false
            title: SignOutRequestBody
            description: '@category API Requests / Responses'
            type: object
        iSignOutSuccessResponse:
            additionalProperties: false
            title: iSignOutSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        GetBrowseCollectionsBody:
            additionalProperties: false
            title: GetBrowseCollectionsBody
            description: '@category API Requests / Responses'
            type: object
        iGetBrowseCollectionsRouteSuccessResponse:
            properties:
                collections:
                    additionalProperties:
                        items: {}
                        title: '[]'
                        type: array
                    title: iGetBrowseCollectionsRouteSuccessResponse.collections
                    type: object
                addressLists:
                    additionalProperties:
                        items: {}
                        title: '[]'
                        type: array
                    title: iGetBrowseCollectionsRouteSuccessResponse.addressLists
                    type: object
                profiles:
                    additionalProperties:
                        items: {}
                        title: '[]'
                        type: array
                    title: iGetBrowseCollectionsRouteSuccessResponse.profiles
                    type: object
                activity:
                    items: {}
                    title: iGetBrowseCollectionsRouteSuccessResponse.activity
                    type: array
                badges:
                    additionalProperties:
                        items:
                            properties:
                                collection:
                                    title: '[].collection'
                                badgeIds:
                                    items: {}
                                    title: '[].badgeIds'
                                    type: array
                            required:
                                - collection
                                - badgeIds
                            additionalProperties: false
                            title: '[]'
                            type: object
                        title: '[]'
                        type: array
                    title: iGetBrowseCollectionsRouteSuccessResponse.badges
                    type: object
            required:
                - collections
                - addressLists
                - profiles
                - activity
                - badges
            additionalProperties: false
            title: iGetBrowseCollectionsRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        BroadcastTxBody:
            title: BroadcastTxBody
            description: '@category API Requests / Responses'
        iBroadcastTxRouteSuccessResponse:
            properties:
                tx_response:
                    properties:
                        code:
                            title: iBroadcastTxRouteSuccessResponse.tx_response.code
                            type: number
                        codespace:
                            title: iBroadcastTxRouteSuccessResponse.tx_response.codespace
                            type: string
                        data:
                            title: iBroadcastTxRouteSuccessResponse.tx_response.data
                            type: string
                        events:
                            items:
                                properties:
                                    type:
                                        title: >-
                                            iBroadcastTxRouteSuccessResponse.tx_response.events.[].type
                                        type: string
                                    attributes:
                                        items:
                                            properties:
                                                key:
                                                    title: >-
                                                        iBroadcastTxRouteSuccessResponse.tx_response.events.[].attributes.[].key
                                                    type: string
                                                value:
                                                    title: >-
                                                        iBroadcastTxRouteSuccessResponse.tx_response.events.[].attributes.[].value
                                                    type: string
                                                index:
                                                    title: >-
                                                        iBroadcastTxRouteSuccessResponse.tx_response.events.[].attributes.[].index
                                                    type: boolean
                                            required:
                                                - key
                                                - value
                                                - index
                                            additionalProperties: false
                                            title: >-
                                                iBroadcastTxRouteSuccessResponse.tx_response.events.[].attributes.[]
                                            type: object
                                        title: >-
                                            iBroadcastTxRouteSuccessResponse.tx_response.events.[].attributes
                                        type: array
                                required:
                                    - type
                                    - attributes
                                additionalProperties: false
                                title: iBroadcastTxRouteSuccessResponse.tx_response.events.[]
                                type: object
                            title: iBroadcastTxRouteSuccessResponse.tx_response.events
                            type: array
                        gas_wanted:
                            title: iBroadcastTxRouteSuccessResponse.tx_response.gas_wanted
                            type: string
                        gas_used:
                            title: iBroadcastTxRouteSuccessResponse.tx_response.gas_used
                            type: string
                        height:
                            title: iBroadcastTxRouteSuccessResponse.tx_response.height
                            type: string
                        Doc:
                            title: iBroadcastTxRouteSuccessResponse.tx_response.Doc
                            type: string
                        logs:
                            items:
                                properties:
                                    events:
                                        items:
                                            properties:
                                                type:
                                                    title: >-
                                                        iBroadcastTxRouteSuccessResponse.tx_response.logs.[].events.[].type
                                                    type: string
                                                attributes:
                                                    items:
                                                        properties:
                                                            key:
                                                                title: >-
                                                                    iBroadcastTxRouteSuccessResponse.tx_response.logs.[].events.[].attributes.[].key
                                                                type: string
                                                            value:
                                                                title: >-
                                                                    iBroadcastTxRouteSuccessResponse.tx_response.logs.[].events.[].attributes.[].value
                                                                type: string
                                                            index:
                                                                title: >-
                                                                    iBroadcastTxRouteSuccessResponse.tx_response.logs.[].events.[].attributes.[].index
                                                                type: boolean
                                                        required:
                                                            - key
                                                            - value
                                                            - index
                                                        additionalProperties: false
                                                        title: >-
                                                            iBroadcastTxRouteSuccessResponse.tx_response.logs.[].events.[].attributes.[]
                                                        type: object
                                                    title: >-
                                                        iBroadcastTxRouteSuccessResponse.tx_response.logs.[].events.[].attributes
                                                    type: array
                                            required:
                                                - type
                                                - attributes
                                            additionalProperties: false
                                            title: >-
                                                iBroadcastTxRouteSuccessResponse.tx_response.logs.[].events.[]
                                            type: object
                                        title: >-
                                            iBroadcastTxRouteSuccessResponse.tx_response.logs.[].events
                                        type: array
                                required:
                                    - events
                                additionalProperties: false
                                title: iBroadcastTxRouteSuccessResponse.tx_response.logs.[]
                                type: object
                            title: iBroadcastTxRouteSuccessResponse.tx_response.logs
                            type: array
                        raw_log:
                            title: iBroadcastTxRouteSuccessResponse.tx_response.raw_log
                            type: string
                        timestamp:
                            title: iBroadcastTxRouteSuccessResponse.tx_response.timestamp
                            type: string
                        tx:
                            title: iBroadcastTxRouteSuccessResponse.tx_response.tx
                            nullable: true
                            type: object
                        txhash:
                            title: iBroadcastTxRouteSuccessResponse.tx_response.txhash
                            type: string
                    required:
                        - code
                        - codespace
                        - data
                        - events
                        - gas_wanted
                        - gas_used
                        - height
                        - Doc
                        - logs
                        - raw_log
                        - timestamp
                        - tx
                        - txhash
                    additionalProperties: false
                    title: iBroadcastTxRouteSuccessResponse.tx_response
                    description: |-
                        The response from the blockchain for the broadcasted tx.
                        See Cosmos SDK documentation for what each field means.
                    type: object
            required:
                - tx_response
            additionalProperties: false
            title: iBroadcastTxRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        SimulateTxBody:
            title: SimulateTxBody
            description: '@category API Requests / Responses'
        iSimulateTxRouteSuccessResponse:
            properties:
                gas_info:
                    properties:
                        gas_used:
                            title: iSimulateTxRouteSuccessResponse.gas_info.gas_used
                            type: string
                        gas_wanted:
                            title: iSimulateTxRouteSuccessResponse.gas_info.gas_wanted
                            type: string
                    required:
                        - gas_used
                        - gas_wanted
                    additionalProperties: false
                    title: iSimulateTxRouteSuccessResponse.gas_info
                    description: How much gas was used in the simulation.
                    type: object
                result:
                    properties:
                        data:
                            title: iSimulateTxRouteSuccessResponse.result.data
                            type: string
                        log:
                            title: iSimulateTxRouteSuccessResponse.result.log
                            type: string
                        events:
                            items:
                                properties:
                                    type:
                                        title: iSimulateTxRouteSuccessResponse.result.events.[].type
                                        type: string
                                    attributes:
                                        items:
                                            properties:
                                                key:
                                                    title: >-
                                                        iSimulateTxRouteSuccessResponse.result.events.[].attributes.[].key
                                                    type: string
                                                value:
                                                    title: >-
                                                        iSimulateTxRouteSuccessResponse.result.events.[].attributes.[].value
                                                    type: string
                                                index:
                                                    title: >-
                                                        iSimulateTxRouteSuccessResponse.result.events.[].attributes.[].index
                                                    type: boolean
                                            required:
                                                - key
                                                - value
                                                - index
                                            additionalProperties: false
                                            title: >-
                                                iSimulateTxRouteSuccessResponse.result.events.[].attributes.[]
                                            type: object
                                        title: >-
                                            iSimulateTxRouteSuccessResponse.result.events.[].attributes
                                        type: array
                                required:
                                    - type
                                    - attributes
                                additionalProperties: false
                                title: iSimulateTxRouteSuccessResponse.result.events.[]
                                type: object
                            title: iSimulateTxRouteSuccessResponse.result.events
                            type: array
                    required:
                        - data
                        - log
                        - events
                    additionalProperties: false
                    title: iSimulateTxRouteSuccessResponse.result
                    description: The result of the simulation.
                    type: object
            required:
                - gas_info
                - result
            additionalProperties: false
            title: iSimulateTxRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        FetchMetadataDirectlyBody:
            properties:
                uris:
                    items:
                        title: FetchMetadataDirectlyBody.uris.[]
                        type: string
                    title: FetchMetadataDirectlyBody.uris
                    type: array
            required:
                - uris
            additionalProperties: false
            title: FetchMetadataDirectlyBody
            description: '@category API Requests / Responses'
            type: object
        iFetchMetadataDirectlyRouteSuccessResponse:
            properties:
                metadata:
                    items: {}
                    title: iFetchMetadataDirectlyRouteSuccessResponse.metadata
                    type: array
            required:
                - metadata
            additionalProperties: false
            title: iFetchMetadataDirectlyRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        GetTokensFromFaucetBody:
            additionalProperties: false
            title: GetTokensFromFaucetBody
            description: '@category API Requests / Responses'
            type: object
        iGetTokensFromFaucetRouteSuccessResponse:
            title: iGetTokensFromFaucetRouteSuccessResponse
            description: '@category API Requests / Responses'
        SendClaimAlertsBody:
            properties:
                claimAlerts:
                    items:
                        properties:
                            collectionId:
                                title: SendClaimAlertsBody.claimAlerts.[].collectionId
                                anyOf:
                                    - type: string
                                    - type: number
                            message:
                                title: SendClaimAlertsBody.claimAlerts.[].message
                                type: string
                            recipientAddress:
                                title: >-
                                    SendClaimAlertsBody.claimAlerts.[].recipientAddress
                                type: string
                        required:
                            - collectionId
                            - recipientAddress
                        additionalProperties: false
                        title: SendClaimAlertsBody.claimAlerts.[]
                        type: object
                    title: SendClaimAlertsBody.claimAlerts
                    type: array
            required:
                - claimAlerts
            additionalProperties: false
            title: SendClaimAlertsBody
            description: '@category API Requests / Responses'
            type: object
        iSendClaimAlertsRouteSuccessResponse:
            additionalProperties: false
            title: iSendClaimAlertsRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        CosmosAccountResponse:
            properties:
                account_number:
                    title: CosmosAccountResponse.account_number
                    type: number
                sequence:
                    title: CosmosAccountResponse.sequence
                    type: number
                pub_key:
                    properties:
                        key:
                            title: CosmosAccountResponse.pub_key.key
                            type: string
                    required:
                        - key
                    additionalProperties: false
                    title: CosmosAccountResponse.pub_key
                    type: object
                address:
                    title: CosmosAccountResponse.address
                    type: string
            required:
                - account_number
                - sequence
                - pub_key
                - address
            additionalProperties: false
            title: CosmosAccountResponse
            description: >-
                information returned by the REST API getAccount route.


                Note this should be converted into AccountDoc or BitBadgesUserInfo
                before being returned by the BitBadges API for consistency.

                @category API Requests / Responses
            type: object
        GenericBlockinVerifyBody:
            properties:
                message:
                    title: VerifySignInBody.message
                    description: The original Blockin message
                    type: string
                signature:
                    title: VerifySignInBody.signature
                    description: The signature of the Blockin message
                    type: string
                publicKey:
                    title: VerifySignInBody.publicKey
                    description: Required for some chains. The public key of the signer.
                    type: string
                options:
                    title: GenericBlockinVerifyBody.options
                    description: Additional options for verifying the challenge.
            required:
                - message
                - signature
            additionalProperties: false
            title: GenericBlockinVerifyBody, VerifySignInBody
            description: >-
                Generic route to verify any Blockin request. Does not sign you in with
                the API. Used for custom Blockin integrations.

                @category API Requests / Responses

                @category API Requests / Responses
            type: object
        iGenericBlockinVerifyRouteSuccessResponse:
            additionalProperties: false
            title: >-
                iGenericBlockinVerifyRouteSuccessResponse,
                iVerifySignInRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        CreateBlockinAuthCodeBody:
            properties:
                name:
                    title: CreateBlockinAuthCodeBody.name
                    type: string
                description:
                    title: CreateBlockinAuthCodeBody.description
                    type: string
                image:
                    title: CreateBlockinAuthCodeBody.image
                    type: string
                message:
                    title: CreateBlockinAuthCodeBody.message
                    type: string
                signature:
                    title: CreateBlockinAuthCodeBody.signature
                    type: string
                publicKey:
                    title: CreateBlockinAuthCodeBody.publicKey
                    type: string
            required:
                - name
                - description
                - image
                - message
                - signature
            additionalProperties: false
            title: CreateBlockinAuthCodeBody
            description: '@category API Requests / Responses'
            type: object
        iCreateBlockinAuthCodeRouteSuccessResponse:
            additionalProperties: false
            title: iCreateBlockinAuthCodeRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        GetBlockinAuthCodeBody:
            properties:
                signature:
                    title: GetBlockinAuthCodeBody.signature
                    type: string
                options:
                    title: GetBlockinAuthCodeBody.options
            required:
                - signature
            additionalProperties: false
            title: GetBlockinAuthCodeBody
            description: '@category API Requests / Responses'
            type: object
        iGetBlockinAuthCodeRouteSuccessResponse:
            properties:
                message:
                    title: iGetBlockinAuthCodeRouteSuccessResponse.message
                    description: The corresponding message that was signed to obtain the signature.
                    type: string
                params:
                    title: iGetBlockinAuthCodeRouteSuccessResponse.params
                    description: The converted Blockin params fort the message
                verificationResponse:
                    properties:
                        success:
                            title: >-
                                iGetBlockinAuthCodeRouteSuccessResponse.verificationResponse.success
                            description: >-
                                Returns whether the current (message, signature) pair is valid
                                and verified (i.e. signature is valid and any assets are owned).
                            type: boolean
                        errorMessage:
                            title: >-
                                iGetBlockinAuthCodeRouteSuccessResponse.verificationResponse.errorMessage
                            description: Returns the response message returned from Blockin verification.
                            type: string
                    required:
                        - success
                    additionalProperties: false
                    title: iGetBlockinAuthCodeRouteSuccessResponse.verificationResponse
                    description: Verification response
                    type: object
            required:
                - message
                - params
                - verificationResponse
            additionalProperties: false
            title: iGetBlockinAuthCodeRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        DeleteBlockinAuthCodeBody:
            properties:
                signature:
                    title: DeleteBlockinAuthCodeBody.signature
                    type: string
            required:
                - signature
            additionalProperties: false
            title: DeleteBlockinAuthCodeBody
            description: '@category API Requests / Responses'
            type: object
        iDeleteBlockinAuthCodeRouteSuccessResponse:
            additionalProperties: false
            title: iDeleteBlockinAuthCodeRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        GenerateAppleWalletPassBody:
            properties:
                name:
                    title: GenerateAppleWalletPassBody.name
                    type: string
                description:
                    title: GenerateAppleWalletPassBody.description
                    type: string
                message:
                    title: GenerateAppleWalletPassBody.message
                    type: string
                signature:
                    title: GenerateAppleWalletPassBody.signature
                    type: string
            required:
                - name
                - description
                - message
                - signature
            additionalProperties: false
            title: GenerateAppleWalletPassBody
            description: '@category API Requests / Responses'
            type: object
        iGenerateAppleWalletPassRouteSuccessResponse:
            properties:
                type:
                    title: iGenerateAppleWalletPassRouteSuccessResponse.type
                    type: string
                data:
                    title: iGenerateAppleWalletPassRouteSuccessResponse.data
                    type: string
            required:
                - type
                - data
            additionalProperties: false
            title: iGenerateAppleWalletPassRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        GetClaimAlertsForCollectionBody:
            properties:
                collectionId:
                    title: GetClaimAlertsForCollectionBody.collectionId
                    anyOf:
                        - type: string
                        - type: number
                bookmark:
                    title: GetClaimAlertsForCollectionBody.bookmark
                    type: string
            required:
                - collectionId
                - bookmark
            additionalProperties: false
            title: GetClaimAlertsForCollectionBody
            description: '@category API Requests / Responses'
            type: object
        iGetClaimAlertsForCollectionRouteSuccessResponse:
            properties:
                claimAlerts:
                    items: {}
                    title: iGetClaimAlertsForCollectionRouteSuccessResponse.claimAlerts
                    type: array
                pagination:
                    title: iGetClaimAlertsForCollectionRouteSuccessResponse.pagination
            required:
                - claimAlerts
                - pagination
            additionalProperties: false
            title: iGetClaimAlertsForCollectionRouteSuccessResponse
            description: '@category API Requests / Responses'
            type: object
        AccountResponse:
            properties:
                account:
                    properties:
                        "'@type'":
                            title: AccountResponse.account.'@type'
                            type: string
                        base_account:
                            properties:
                                address:
                                    title: AccountResponse.account.base_account.address
                                    type: string
                                pub_key:
                                    properties:
                                        "'@type'":
                                            title: AccountResponse.account.base_account.pub_key.'@type'
                                            type: string
                                        key:
                                            title: AccountResponse.account.base_account.pub_key.key
                                            type: string
                                    required:
                                        - "'@type'"
                                        - key
                                    additionalProperties: false
                                    title: AccountResponse.account.base_account.pub_key
                                    type: object
                                account_number:
                                    title: AccountResponse.account.base_account.account_number
                                    type: string
                                sequence:
                                    title: AccountResponse.account.base_account.sequence
                                    type: string
                            required:
                                - address
                                - account_number
                                - sequence
                            additionalProperties: false
                            title: AccountResponse.account.base_account
                            type: object
                    required:
                        - "'@type'"
                        - base_account
                    additionalProperties: false
                    title: AccountResponse.account
                    type: object
            required:
                - account
            additionalProperties: false
            title: AccountResponse
            type: object
        TxContext:
            properties:
                chain:
                    title: TxContext.chain
                sender:
                    title: TxContext.sender
                fee:
                    title: TxContext.fee
                memo:
                    title: TxContext.memo
                    type: string
            required:
                - chain
                - sender
                - fee
                - memo
            additionalProperties: false
            title: TxContext
            description: |-
                TxContext is the transaction context for a SignDoc that is independent
                from the transaction payload.
                @category Transactions
            type: object
        EIP712TypedData:
            properties:
                types:
                    title: EIP712TypedData.types
                    type: object
                message:
                    anyOf:
                        - title: EIP712TypedData.message
                          type: object
                        - items:
                              title: EIP712TypedData.message.[]
                              type: object
                          title: EIP712TypedData.message.[]
                          type: array
                    title: EIP712TypedData.message
                domain:
                    title: EIP712TypedData.domain
                    type: object
                primaryType:
                    title: EIP712TypedData.primaryType
                    type: string
            required:
                - types
                - message
                - domain
                - primaryType
            additionalProperties: false
            title: EIP712TypedData
            description: |-
                EIP712TypedData represents a signable EIP-712 typed data object,
                including both the types and message object.
                @remarks See the EIP-712 specification for more:
                 ://eips.ethereum.org/EIPS/eip-712
                @category Transactions
            type: object
        TransactionPayload:
            properties:
                legacyAmino:
                    properties:
                        body:
                            title: TransactionPayload.legacyAmino.body
                        authInfo:
                            title: TransactionPayload.legacyAmino.authInfo
                        signBytes:
                            title: TransactionPayload.legacyAmino.signBytes
                            type: string
                    required:
                        - body
                        - authInfo
                        - signBytes
                    additionalProperties: false
                    title: TransactionPayload.legacyAmino
                    type: object
                signDirect:
                    properties:
                        body:
                            title: TransactionPayload.signDirect.body
                        authInfo:
                            title: TransactionPayload.signDirect.authInfo
                        signBytes:
                            title: TransactionPayload.signDirect.signBytes
                            type: string
                    required:
                        - body
                        - authInfo
                        - signBytes
                    additionalProperties: false
                    title: TransactionPayload.signDirect
                    type: object
                eipToSign:
                    $ref: '#/components/schemas/EIP712TypedData'
                    title: TransactionPayload.eipToSign
                jsonToSign:
                    title: TransactionPayload.jsonToSign
                    type: string
            required:
                - legacyAmino
                - signDirect
                - eipToSign
                - jsonToSign
            additionalProperties: false
            title: TransactionPayload
            description: >-
                A transaction payload is the payload for a given transaction context and
                messages. This contains

                the messages that need to be signed for different chains.


                For Ethereum, the payload is in EIP-712 format, so the payload.eipToSign
                is the payload to sign.

                For Cosmos, the payload can be signed in Amino or Sign Direct format, so
                the payload.signDirect and

                payload.legacyAmino are the payloads to sign.

                For Solana amnd Bitcoin, the payload is in JSON format, so the
                payload.jsonToSign is the payload to sign.

                @category Transactions
            type: object

    #     This function retrieves badge collections and accompanying details. Consider using the `getCollectionsAndUpdate` function instead for native support in handling paginations, appending metadata, and more.
    #  *
    #  * @remarks
    #  * - **API Route**: `POST /api/v0/collection/batch`
    #  * - **Tutorial**: Refer to the [Fetching Collections tutorial](https://docs.bitbadges.io/for-developers/bitbadges-api/tutorials/fetching-collections) on the official documentation.
    # /collection/ba
    # /collection/batch:
    #   post:
    #     summary: Get Collections
    #     operationId: getCollections
    #     responses:
    #       '200':
    #         description: OK
    # /collection/{collectionId}/{badgeId}/owners:
    #   post:
    #     summary: Get Owners for Badge
    #     operationId: getOwnersForBadge
    #     parameters:
    #       - name: collectionId
    #         in: path
    #         required: true
    #         schema:
    #           type: string
    #       - name: badgeId
    #         in: path
    #         required: true
    #         schema:
    #           type: string
    #     responses:
    #       '200':
    #         description: OK
    # /collection/{collectionId}/balance/{cosmosAddress}:
    #   post:
    #     summary: Get Badge Balance by Address
    #     operationId: getBadgeBalanceByAddress
    #     parameters:
    #       - name: collectionId
    #         in: path
    #         required: true
    #         schema:
    #           type: string
    #       - name: cosmosAddress
    #         in: path
    #         required: true
    #         schema:
    #           type: string
    #     responses:
    #       '200':
    #         description: OK
    # /collection/{collectionId}/{badgeId}/activity:
    #   post:
    #     summary: Get Badge Activity
    #     operationId: getBadgeActivity
    #     parameters:
    #       - name: collectionId
    #         in: path
    #         required: true
    #         schema:
    #           type: string
    #       - name: badgeId
    #         in: path
    #         required: true
    #         schema:
    #           type: string
    #     responses:
    #       '200':
    #         description: OK
    # /collection/{collectionId}/refresh:
    #   post:
    #     summary: Refresh Collection Metadata
    #     operationId: refreshMetadata
    #     responses:
    #       '200':
    #         description: OK
    # /collection/{collectionId}/refreshStatus:
    #   post:
    #     summary: Get Refresh Status
    #     operationId: getRefreshStatus
    #     responses:
    #       '200':
    #         description: OK
    # /claims/{claimId}/{cosmosAddress}:
    #   post:
    #     summary: Check and Complete Claim
    #     operationId: completeClaim
    #     parameters:
    #       - name: claimId
    #         in: path
    #         required: true
    #         schema:
    #           type: string
    #       - name: cosmosAddress
    #         in: path
    #         required: true
    #         schema:
    #           type: string
    #     responses:
    #       '200':
    #         description: OK
    # /claims:
    #   post:
    #     summary: Get Claims
    #     operationId: getClaimsHandler
    #     responses:
    #       '200':
    #         description: OK
    # /collections/filter:
    #   post:
    #     summary: Filter Badges in Collection
    #     operationId: filterBadgesInCollectionHandler
    #     responses:
    #       '200':
    #         description: OK
    # /collection/{collectionId}/addReview:
    #   post:
    #     summary: Add Review for Collection
    #     operationId: addReviewForCollection
    #     responses:
    #       '200':
    #         description: OK
    # /user/batch:
    #   post:
    #     summary: Get User Accounts in Batch
    #     operationId: getAccounts
    #     responses:
    #       '200':
    #         description: OK
    # /user/updateAccount:
    #   post:
    #     summary: Update User Account
    #     operationId: updateAccountInfo
    #     requestBody:
    #       required: true
    #       content:
    #         multipart/form-data:
    #           schema:
    #             type: object
    #             properties:
    #               profilePicImageFile:
    #                 type: string
    #                 format: binary
    #     responses:
    #       '200':
    #         description: OK
    # /user/{addressOrUsername}/addReview:
    #   post:
    #     summary: Add Review for User
    #     operationId: addReviewForUser
    #     parameters:
    #       - name: addressOrUsername
    #         in: path
    #         required: true
    #         schema:
    #           type: string
    #     responses:
    #       '200':
    #         description: OK
    # /addMetadataToIpfs:
    #   post:
    #     summary: Add Metadata to IPFS
    #     operationId: addMetadataToIpfsHandler
    #     requestBody:
    #       required: true
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               metadata:
    #                 type: object
    #     responses:
    #       '200':
    #         description: OK
    # /addApprovalDetailsToOffChainStorage:
    #   post:
    #     summary: Add Approval Details to Off-Chain Storage
    #     operationId: addApprovalDetailsToOffChainStorageHandler
    #     requestBody:
    #       required: true
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               approvalDetails:
    #                 type: object
    #     responses:
    #       '200':
    #         description: OK
    # /addBalancesToOffChainStorage:
    #   post:
    #     summary: Add Balances to Off-Chain Storage
    #     operationId: addBalancesToOffChainStorageHandler
    #     requestBody:
    #       required: true
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               balances:
    #                 type: object
    #     responses:
    #       '200':
    #         description: OK
    # /auth/getChallenge:
    #   post:
    #     summary: Get Authentication Challenge
    #     operationId: getChallenge
    #     responses:
    #       '200':
    #         description: OK
    # /auth/verify:
    #   post:
    #     summary: Verify Blockin and Grant Session Cookie
    #     operationId: verifyBlockinAndGrantSessionCookie
    #     responses:
    #       '200':
    #         description: OK
    # /auth/logout:
    #   post:
    #     summary: Logout
    #     operationId: removeBlockinSessionCookie
    #     responses:
    #       '200':
    #         description: OK
    # /auth/status:
    #   post:
    #     summary: Check Authentication Status
    #     operationId: checkifSignedInHandler
    #     responses:
    #       '200':
    #         description: OK
    # /auth/genericVerify:
    #   post:
    #     summary: Generic Blockin Verification
    #     operationId: genericBlockinVerifyHandler
    #     responses:
    #       '200':
    #         description: OK
    # /metadata:
    #   post:
    #     summary: Fetch Arbitrary Metadata
    #     operationId: fetchMetadataDirectly
    #     responses:
    #       '200':
    #         description: OK
    # /browse:
    #   post:
    #     summary: Browse Collections
    #     operationId: getBrowseCollections
    #     responses:
    #       '200':
    #         description: OK
    # /broadcast:
    #   post:
    #     summary: Broadcast Transaction
    #     operationId: broadcastTx
    #     responses:
    #       '200':
    #         description: OK
    # /simulate:
    #   post:
    #     summary: Simulate Transaction
    #     operationId: simulateTx
    #     responses:
    #       '200':
    #         description: OK
    # /faucet:
    #   post:
    #     summary: Get Tokens from Faucet
    #     operationId: getTokensFromFaucet
    #     responses:
    #       '200':
    #         description: OK
    # /addressLists:
    #   post:
    #     summary: Get Address Lists
    #     operationId: getAddressLists
    #     responses:
    #       '200':
    #         description: OK
    # /addressLists/update:
    #   post:
    #     summary: Update Address Lists
    #     operationId: updateAddressLists
    #     responses:
    #       '200':
    #         description: OK
    # /addressLists/delete:
    #   post:
    #     summary: Delete Address Lists
    #     operationId: deleteAddressLists
    #     responses:
    #       '200':
    #         description: OK
    # /authCode:
    #   post:
    #     summary: Get Authentication Code
    #     operationId: getAuthCode
    #     responses:
    #       '200':
    #         description: OK
    # /authCode/create:
    #   post:
    #     summary: Create Authentication Code
    #     operationId: createAuthCode
    #     responses:
    #       '200':
    #         description: OK
    # /authCode/delete:
    #   post:
    #     summary: Delete Authentication Code
    #     operationId: deleteAuthCode
    #     responses:
    #       '200':
    #         description: OK
    # /claimAlerts/send:
    #   post:
    #     summary: Send Claim Alerts
    #     operationId: sendClaimAlert
    #     responses:
    #       '200':
    #         description: OK
    # /claimAlerts:
    #   post:
    #     summary: Get Claim Alerts for Collection
    #     operationId: getClaimAlertsForCollection
    #     responses:
    #       '200':
    #         description: OK
    # /follow-protocol:
    #   post:
    #     summary: Follow Protocol
    #     operationId: getFollowDetails
    #     responses:
    #       '200':
    #         description: OK
    # /ethFirstTx/{cosmosAddress}:
    #   get:
    #     summary: Get Balances for ETH First Transaction
    #     operationId: getBalancesForEthFirstTx
    #     parameters:
    #       - name: cosmosAddress
    #         in: path
    #         required: true
    #         schema:
    #           type: string
    #     responses:
    #       '200':
    #         description: OK
    # /protocols:
    #   post:
    #     summary: Get Protocols
    #     operationId: getProtocols
    #     responses:
    #       '200':
    #         description: OK
    # /protocols/collection:
    #   post:
    #     summary: Get Collection for Protocol
    #     operationId: getCollectionForProtocol
    #     responses:
    #       '200':
    #         description: OK
    # /appleWalletPass:
    #   post:
    #     summary: Create Apple Wallet Pass
    #     operationId: createPass
    #     responses:
    #       '200':
    #         description: OK
    # /verifyEmail/{token}:
    #   get:
    #     summary: Verify Email
    #     operationId: verifyEmail
    #     parameters:
    #       - name: token
    #         in: path
    #         required: true
    #         schema:
    #           type: string
    #     responses:
    #       '200':
    #         description: OK
